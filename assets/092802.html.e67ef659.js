import{_ as n,o as s,c as a,a as p}from"./app.9376a9a7.js";const t={},o=p(`<h2 id="\u81EA\u5B9A\u4E49\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u4E8B\u4EF6" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u4E8B\u4EF6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> salesOffices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment">// \u5B9A\u4E49\u552E\u697C\u5904</span>

salesOffices<span class="token punctuation">.</span>clientList <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment">// \u7F13\u5B58\u5217\u8868\uFF0C\u5B58\u653E\u8BA2\u9605\u8005\u7684\u56DE\u8C03\u51FD\u6570</span>

salesOffices<span class="token punctuation">.</span><span class="token function-variable function">listen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u5982\u679C\u8FD8\u6CA1\u6709\u8BA2\u9605\u8FC7\u6B64\u7C7B\u6D88\u606F\uFF0C\u7ED9\u8BE5\u7C7B\u6D88\u606F\u521B\u5EFA\u4E00\u4E2A\u7F13\u5B58\u5217\u8868</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> fn <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8BA2\u9605\u7684\u6D88\u606F\u6DFB\u52A0\u8FDB\u6D88\u606F\u7F13\u5B58\u5217\u8868</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

salesOffices<span class="token punctuation">.</span><span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u53D1\u5E03\u6D88\u606F</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> arguments <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// \u53D6\u51FA\u6D88\u606F\u7C7B\u578B</span>
      fns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// \u53D6\u51FA\u8BE5\u6D88\u606F\u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u96C6\u5408</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> fns <span class="token operator">||</span> fns<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u8BA2\u9605\u8BE5\u6D88\u606F\uFF0C\u5219\u8FD4\u56DE</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> fn<span class="token punctuation">;</span> fn <span class="token operator">=</span> fns<span class="token punctuation">[</span> i<span class="token operator">++</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// (2) // arguments\u662F\u53D1\u5E03\u6D88\u606F\u65F6\u9644\u9001\u7684\u53C2\u6570</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

salesOffices<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span> <span class="token string">&#39;squareMeter88&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">price</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u5C0F\u660E\u8BA2\u960588\u5E73\u65B9\u7C73\u623F\u5B50\u7684\u6D88\u606F</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token string">&#39;\u4EF7\u683C= &#39;</span> <span class="token operator">+</span> price <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A 2000000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

salesOffices<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span> <span class="token string">&#39;squareMeter110&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">price</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">// \u5C0F\u7EA2\u8BA2\u9605110\u5E73\u65B9\u7C73\u623F\u5B50\u7684\u6D88\u606F</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token string">&#39;\u4EF7\u683C= &#39;</span> <span class="token operator">+</span> price <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A 3000000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

salesOffices<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span> <span class="token string">&#39;squareMeter88&#39;</span><span class="token punctuation">,</span> <span class="token number">2000000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u53D1\u5E0388\u5E73\u65B9\u7C73\u623F\u5B50\u7684\u4EF7\u683C</span>
salesOffices<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span> <span class="token string">&#39;squareMeter110&#39;</span><span class="token punctuation">,</span> <span class="token number">3000000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u53D1\u5E03110\u5E73\u65B9\u7C73\u623F\u5B50\u7684\u4EF7\u683C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u901A\u7528\u7684\u53D1\u5E03\u2014\u2014\u8BA2\u9605\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u901A\u7528\u7684\u53D1\u5E03\u2014\u2014\u8BA2\u9605\u5B9E\u73B0" aria-hidden="true">#</a> \u901A\u7528\u7684\u53D1\u5E03\u2014\u2014\u8BA2\u9605\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7F13\u5B58\u5217\u8868</span>
    <span class="token literal-property property">clientList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8BA2\u9605</span>
    <span class="token function-variable function">listen</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> fn <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8BA2\u9605\u7684\u6D88\u606F\u6DFB\u52A0\u8FDB\u7F13\u5B58\u5217\u8868</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u53D1\u5E03</span>
    <span class="token function-variable function">trigger</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> arguments <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// (1);</span>
          fns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> fns <span class="token operator">||</span> fns<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u7ED1\u5B9A\u5BF9\u5E94\u7684\u6D88\u606F</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> fn<span class="token punctuation">;</span> fn <span class="token operator">=</span> fns<span class="token punctuation">[</span> i<span class="token operator">++</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// (2) // arguments\u662Ftrigger\u65F6\u5E26\u4E0A\u7684\u53C2\u6570</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u53D6\u6D88\u8BA2\u9605</span>
    <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">var</span> fns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientList<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> fns <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u5982\u679Ckey\u5BF9\u5E94\u7684\u6D88\u606F\u6CA1\u6709\u88AB\u4EBA\u8BA2\u9605\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> fn <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u4F20\u5165\u5177\u4F53\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8868\u793A\u9700\u8981\u53D6\u6D88key\u5BF9\u5E94\u6D88\u606F\u7684\u6240\u6709\u8BA2\u9605</span>
        fns <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> fns<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">var</span> l <span class="token operator">=</span> fns<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> l <span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> l<span class="token operator">--</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u53CD\u5411\u904D\u5386\u8BA2\u9605\u7684\u56DE\u8C03\u51FD\u6570\u5217\u8868</span>
            <span class="token keyword">var</span> _fn <span class="token operator">=</span> fns<span class="token punctuation">[</span> l <span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> _fn <span class="token operator">===</span> fn <span class="token punctuation">)</span><span class="token punctuation">{</span>
                fns<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span> l<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u5220\u9664\u8BA2\u9605\u8005\u7684\u56DE\u8C03\u51FD\u6570</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E00\u4E2A\u5F88\u53D8\u6001\u7684\u5B9E\u73B0-\u60A8\u7EC6\u54C1" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u5F88\u53D8\u6001\u7684\u5B9E\u73B0-\u60A8\u7EC6\u54C1" aria-hidden="true">#</a> <mark>\u4E00\u4E2A\u5F88\u53D8\u6001\u7684\u5B9E\u73B0\uFF08\u60A8\u7EC6\u54C1\uFF09</mark></h2><ul><li>\u5148\u53D1\u5E03\u540E\u8BA2\u9605\uFF08\u5229\u7528<code>offlineStack</code>\uFF0C<code>trigger</code>\u4E2D\u5F80<code>offlineStack</code>\u6DFB\u52A0\u6267\u884C\u51FD\u6570\uFF08<code>key</code>\u4EE5\u53CA<code>cache</code>\uFF09\uFF0C<code>listen</code>\u9996\u5148\u5F80<code>cache[key]</code>\u6DFB\u52A0\u5BF9\u5E94\u7684\u4E8B\u4EF6\uFF0C\u4E4B\u540E\u904D\u5386<code>offlineStack</code>\u6267\u884C\u5176\u4E2D\u65B9\u6CD5\uFF09</li><li>\u547D\u540D\u7A7A\u95F4\uFF08\u4F7F\u7528 <code>namespaceCache</code> \u8FDB\u884C\u7F13\u5B58\uFF09</li><li>\u5B58\u5728\u4E00\u4E2A<code>one</code>\u7684\u65B9\u6CD5\uFF08\u5C31\u662F\u6E05\u7A7A<code>cache[key]</code>\u91CD\u65B0\u8BA2\u9605\u4EC5\u4EC5\u4E00\u4E2A\u4E8B\u4EF6\uFF09</li><li>\u5B58\u5728\u4E00\u4E2A<code>last</code>\u53C2\u6570\uFF0C\u4E5F\u5C31\u662F\u5F53\u4F60\u53D1\u5E03\u4E86N\u591A\u4E2A\u4E8B\u4EF6\uFF0C\u6700\u540E\u4E00\u4E2A\u4E8B\u4EF6\u4E3AA\uFF0C\u540E\u7EED\u518D\u8BA2\u9605\u4E8B\u4EF6A\uFF0C\u6B64\u65F6\u82E5\u4F60\u4F20\u5165\u7B2C\u4E09\u4E2A\u53C2\u6570<code>last = &#39;last&#39;</code>\uFF0C\u90A3\u4E48\u53EA\u4F1A\u6267\u884C\u4E8B\u4EF6A\u7684\u8BA2\u9605\u56DE\u8C03\u51FD\u6570\uFF01\uFF01\uFF0C\u82E5\u4E0D\u4F20\u5165\uFF0C\u90A3\u4E48N\u591A\u4E2A\u4E8B\u4EF6 + A\u4E8B\u4EF6\u90FD\u4F1A\u6309\u987A\u5E8F\u6267\u884C\u8BA2\u9605\u56DE\u8C03\u51FD\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Event <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token keyword">var</span> global <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
      Event<span class="token punctuation">,</span>
      _default <span class="token operator">=</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">;</span>

    <span class="token function-variable function">Event</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">var</span> _listen<span class="token punctuation">,</span>
          _trigger<span class="token punctuation">,</span>
          _remove<span class="token punctuation">,</span>
          _slice <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">,</span>
          _shift <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>shift<span class="token punctuation">,</span>
          _unshift <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>unshift<span class="token punctuation">,</span>
          namespaceCache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          _create<span class="token punctuation">,</span>
          find<span class="token punctuation">,</span>
          <span class="token function-variable function">each</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">ary<span class="token punctuation">,</span> fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">var</span> ret<span class="token punctuation">;</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> ary<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">var</span> n <span class="token operator">=</span> ary<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
              ret <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> n<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token function-variable function">_listen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> cache</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
              cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> fn <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token function-variable function">_remove</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> cache <span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span> cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">if</span><span class="token punctuation">(</span> fn <span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span> cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> fn <span class="token punctuation">)</span><span class="token punctuation">{</span>
                        cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span> i<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token function-variable function">_trigger</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">var</span> cache <span class="token operator">=</span> <span class="token function">_shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>
                key <span class="token operator">=</span> <span class="token function">_shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>
                args <span class="token operator">=</span> arguments<span class="token punctuation">,</span>
                _self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
                ret<span class="token punctuation">,</span>
                stack <span class="token operator">=</span> cache<span class="token punctuation">[</span> key <span class="token punctuation">]</span><span class="token punctuation">;</span>

          <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> stack <span class="token operator">||</span> <span class="token operator">!</span> stack<span class="token punctuation">.</span>length <span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token keyword">return</span> <span class="token function">each</span><span class="token punctuation">(</span> stack<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> _self<span class="token punctuation">,</span> args <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token function-variable function">_create</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">namespace</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">var</span> namespace <span class="token operator">=</span> namespace <span class="token operator">||</span> _default<span class="token punctuation">;</span>
          <span class="token keyword">var</span> cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
              offlineStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">// \u79BB\u7EBF\u4E8B\u4EF6</span>
              ret <span class="token operator">=</span> <span class="token punctuation">{</span>
                  <span class="token function-variable function">listen</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> last</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">_listen</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> cache <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span> offlineStack <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span> last <span class="token operator">===</span> <span class="token string">&#39;last&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                              offlineStack<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> offlineStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                              <span class="token function">each</span><span class="token punctuation">(</span> offlineStack<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                              <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        offlineStack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token function-variable function">one</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> last</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token function">_remove</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> cache <span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> fn <span class="token punctuation">,</span> last <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token function">_remove</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> cache <span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token function-variable function">trigger</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">var</span> fn<span class="token punctuation">,</span>
                          args<span class="token punctuation">,</span>
                          _self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

                        <span class="token function">_unshift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> arguments<span class="token punctuation">,</span> cache <span class="token punctuation">)</span><span class="token punctuation">;</span>
                        args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
                        <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                          <span class="token keyword">return</span> <span class="token function">_trigger</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> _self<span class="token punctuation">,</span> args <span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token punctuation">;</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span> offlineStack <span class="token punctuation">)</span><span class="token punctuation">{</span>
                          <span class="token keyword">return</span> offlineStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> fn <span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span><span class="token punctuation">;</span>

                  <span class="token keyword">return</span> namespace <span class="token operator">?</span>
                    <span class="token punctuation">(</span> namespaceCache<span class="token punctuation">[</span> namespace <span class="token punctuation">]</span> <span class="token operator">?</span> namespaceCache<span class="token punctuation">[</span> namespace <span class="token punctuation">]</span> <span class="token operator">:</span>
                          namespaceCache<span class="token punctuation">[</span> namespace <span class="token punctuation">]</span> <span class="token operator">=</span> ret <span class="token punctuation">)</span>
                                <span class="token operator">:</span> ret<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>

          <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">create</span><span class="token operator">:</span> _create<span class="token punctuation">,</span>
                <span class="token function-variable function">one</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> last</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    event<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> last <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                  event<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> fn <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">listen</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> last</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    event<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span> key<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> last <span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">trigger</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                  event<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Event<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A8\u6A21\u578B\uFF1A\u53D1\u5E03\u8005\u76F4\u63A5\u5C06\u6240\u6709\u6570\u636E\u63A8\u7ED9\u8BA2\u9605\u8005</p><p>\u62C9\u6A21\u578B\uFF1A\u53D1\u5E03\u8005\u63D0\u4F9B\u516C\u5F00\u63A5\u53E3\uFF0C\u4E8B\u4EF6\u53D1\u751F\u4EC5\u4EC5\u544A\u8BC9\u8BA2\u9605\u8005\u8FD9\u4E2A\u4FE1\u606F\uFF0C\u8BA2\u9605\u8005\u901A\u8FC7\u516C\u5F00\u63A5\u53E3\u62C9\u53D6\u6570\u636E</p>`,9),e=[o];function c(u,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","092802.html.vue"]]);export{k as default};
