import{_ as n,o as s,c as a,a as p}from"./app.9376a9a7.js";const t={},o=p(`<h2 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h2><p>\u8FED\u4EE3\u5668\u6A21\u5F0F\u662F\u6307\u63D0\u4F9B\u4E00\u79CD\u65B9\u6CD5\u987A\u5E8F\u8BBF\u95EE\u4E00\u4E2A\u805A\u5408\u5BF9\u8C61\u4E2D\u7684\u5404\u4E2A\u5143\u7D20\uFF0C\u800C\u53C8\u4E0D\u9700\u8981\u66B4\u9732\u8BE5\u5BF9\u8C61\u7684\u5185\u90E8\u8868\u793A\u3002</p><h2 id="\u5B9E\u73B0\u81EA\u5DF1\u7684\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u81EA\u5DF1\u7684\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u5B9E\u73B0\u81EA\u5DF1\u7684\u8FED\u4EE3\u5668</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">each</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">ary<span class="token punctuation">,</span> callback</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> ary<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> ary<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> ary<span class="token punctuation">[</span> i <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u628A\u4E0B\u6807\u548C\u5143\u7D20\u5F53\u4F5C\u53C2\u6570\u4F20\u7ED9callback\u51FD\u6570</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">each</span><span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">i<span class="token punctuation">,</span> n</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span> i<span class="token punctuation">,</span> n <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5185\u90E8\u8FED\u4EE3\u5668\u4E0E\u5916\u90E8\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u8FED\u4EE3\u5668\u4E0E\u5916\u90E8\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u5185\u90E8\u8FED\u4EE3\u5668\u4E0E\u5916\u90E8\u8FED\u4EE3\u5668</h2><h3 id="\u5185\u90E8\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u5185\u90E8\u8FED\u4EE3\u5668</h3><p>\u8FED\u4EE3\u89C4\u5219\u5DF2\u7ECF\u88AB\u63D0\u524D\u89C4\u5B9A\uFF0C\u524D\u9762\u7684<code>each</code>\u51FD\u6570\u5C31\u662F\u5185\u90E8\u8FED\u4EE3\u5668\uFF0C\u5916\u754C\u4E0D\u7528\u5173\u5FC3\u8FED\u4EE3\u5668\u5185\u90E8\u7684\u5B9E\u73B0\uFF0C\u8DDF\u8FED\u4EE3\u5668\u7684\u4EA4\u4E92\u4E5F\u4EC5\u4EC5\u662F\u4E00\u6B21\u521D\u59CB\u8C03\u7528\uFF0C\u4F7F\u7528\u5185\u90E8\u8FED\u4EE3\u5668<code>each</code>\u5B9E\u73B0\u4E24\u4E2A\u6570\u7EC4\u7684\u76F8\u7B49\u6BD4\u8F83</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">compare</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">ary1<span class="token punctuation">,</span> ary2</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span> ary1<span class="token punctuation">.</span>length <span class="token operator">!</span> <span class="token operator">==</span> ary2<span class="token punctuation">.</span>length <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span> <span class="token punctuation">(</span> &#39;ary1\u548Cary2\u4E0D\u76F8\u7B49\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">each</span><span class="token punctuation">(</span> ary1<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">i<span class="token punctuation">,</span> n</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> n <span class="token operator">!</span> <span class="token operator">==</span> ary2<span class="token punctuation">[</span> i <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span> <span class="token punctuation">(</span> &#39;ary1\u548Cary2\u4E0D\u76F8\u7B49\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">alert</span> <span class="token punctuation">(</span> &#39;ary1\u548Cary2\u76F8\u7B49\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">compare</span><span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// throw new Error ( &#39;ary1\u548Cary2\u4E0D\u76F8\u7B49\u2019 );</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5916\u90E8\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u5916\u90E8\u8FED\u4EE3\u5668</h3><p>\u5916\u90E8\u8FED\u4EE3\u5668\u5FC5\u987B<code>\u663E\u5F0F\u5730\u8BF7\u6C42\u8FED\u4EE3\u4E0B\u4E00\u4E2A\u5143\u7D20</code></p><p>\u5916\u90E8\u8FED\u4EE3\u5668\u589E\u52A0\u4E86\u4E00\u4E9B\u8C03\u7528\u7684\u590D\u6742\u5EA6\uFF0C\u4F46\u76F8\u5BF9\u4E5F\u589E\u5F3A\u4E86\u8FED\u4EE3\u5668\u7684\u7075\u6D3B\u6027\uFF0C\u6211\u4EEC\u53EF\u4EE5<code>\u624B\u5DE5\u63A7\u5236\u8FED\u4EE3\u7684\u8FC7\u7A0B\u6216\u8005\u987A\u5E8F</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">Iterator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">obj</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      current <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">isDone</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> current <span class="token operator">&gt;=</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">getCurrItem</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">[</span> current <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">next</span><span class="token operator">:</span> next<span class="token punctuation">,</span>
      <span class="token literal-property property">isDone</span><span class="token operator">:</span> isDone<span class="token punctuation">,</span>
      <span class="token literal-property property">getCurrItem</span><span class="token operator">:</span> getCurrItem
      <span class="token literal-property property">length</span><span class="token operator">:</span> obj<span class="token punctuation">.</span>length
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6539\u5199\u540E\u7684<code>compare</code>\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">compare</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">iterator1<span class="token punctuation">,</span> iterator2</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>iterator1<span class="token punctuation">.</span>length <span class="token operator">!</span> <span class="token operator">==</span> iterator2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">alert</span><span class="token punctuation">(</span>&#39;iterator1\u548Citerator2\u4E0D\u76F8\u7B49\u2019<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span> <span class="token operator">!</span> iterator1<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> iterator2<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> iterator1<span class="token punctuation">.</span><span class="token function">getCurrItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!</span> <span class="token operator">==</span> iterator2<span class="token punctuation">.</span><span class="token function">getCurrItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span> <span class="token punctuation">(</span> &#39;iterator1\u548Citerator2\u4E0D\u76F8\u7B49\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      iterator1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      iterator2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">alert</span> <span class="token punctuation">(</span> &#39;iterator1\u548Citerator2\u76F8\u7B49\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> iterator1 <span class="token operator">=</span> <span class="token function">Iterator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> iterator2 <span class="token operator">=</span> <span class="token function">Iterator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token function">compare</span><span class="token punctuation">(</span>iterator1<span class="token punctuation">,</span> iterator2<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5012\u5E8F\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u5012\u5E8F\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u5012\u5E8F\u8FED\u4EE3\u5668</h2><p>\u6539\u5199\u4E4B\u524D\u7684<code>each</code>\u5B9E\u73B0\u5012\u5E8F\u7684\u5185\u90E8\u8FED\u4EE3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseEach</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">ary<span class="token punctuation">,</span> callback</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> ary<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> ary<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> ary<span class="token punctuation">[</span> i <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u628A\u4E0B\u6807\u548C\u5143\u7D20\u5F53\u4F5C\u53C2\u6570\u4F20\u7ED9callback\u51FD\u6570</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E2D\u6B62\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u6B62\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u4E2D\u6B62\u8FED\u4EE3\u5668</h2><p>\u901A\u8FC7\u8FD4\u56DEfalse\u8FDB\u800C\u63A7\u5236\u8FED\u4EE3\u5668\u7684\u4E2D\u6B62</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">each</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">ary<span class="token punctuation">,</span> callback</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> ary<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">callback</span><span class="token punctuation">(</span> i<span class="token punctuation">,</span> ary<span class="token punctuation">[</span> i <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// callback\u7684\u6267\u884C\u7ED3\u679C\u8FD4\u56DEfalse\uFF0C\u63D0\u524D\u7EC8\u6B62\u8FED\u4EE3</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">each</span><span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">i<span class="token punctuation">,</span> n</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> n <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment">// n\u5927\u4E8E3\u7684\u65F6\u5019\u7EC8\u6B62\u5FAA\u73AF</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> n <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u5206\u522B\u8F93\u51FA\uFF1A1, 2, 3</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FED\u4EE3\u5668\u6A21\u5F0F\u7684\u5E94\u7528\u4E3E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u6A21\u5F0F\u7684\u5E94\u7528\u4E3E\u4F8B" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u6A21\u5F0F\u7684\u5E94\u7528\u4E3E\u4F8B</h2><p><strong>\u5B9E\u73B0\u6D4F\u89C8\u5668\u4E0A\u4F20\u63A7\u4EF6\u7684\u517C\u5BB9\u6027\u4EE3\u7801</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">getUploadObj</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">try</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">&quot;TXFTNActiveX.FTNUpload&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// IE\u4E0A\u4F20\u63A7\u4EF6</span>
  <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">supportFlash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment">// supportFlash\u51FD\u6570\u672A\u63D0\u4F9B</span>
        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;object  type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/object&gt;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span> str <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;input name=&quot;file&quot; type=&quot;file&quot;/&gt;&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u8868\u5355\u4E0A\u4F20</span>
        <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span> str <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FED\u4EE3\u5668\u8FDB\u884C\u4F18\u5316</strong></p><p>\u62BD\u79BB\u83B7\u53D6\u63A7\u4EF6\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">getActiveUploadObj</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span> <span class="token string">&quot;TXFTNActiveX.FTNUpload&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// IE\u4E0A\u4F20\u63A7\u4EF6</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">getFlashUploadObj</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">supportFlash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">// supportFlash\u51FD\u6570\u672A\u63D0\u4F9B</span>
      <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;object type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/object&gt;&#39;</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span> str <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">getFormUpladObj</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;input name=&quot;file&quot; type=&quot;file&quot; class=&quot;ui-file&quot;/&gt;&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u8868\u5355\u4E0A\u4F20</span>
    <span class="token keyword">return</span> <span class="token function">$</span><span class="token punctuation">(</span> str <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u8FED\u4EE3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">iteratorUploadObj</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> fn<span class="token punctuation">;</span> fn <span class="token operator">=</span> arguments<span class="token punctuation">[</span> i<span class="token operator">++</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">var</span> uploadObj <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> uploadObj <span class="token operator">!</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> uploadObj<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> uploadObj <span class="token operator">=</span> <span class="token function">iteratorUploadObj</span><span class="token punctuation">(</span> getActiveUploadObj<span class="token punctuation">,</span> getFlashUploadObj<span class="token punctuation">,</span> getFormUpladObj <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540E\u7EED\u54B1\u4EEC\u60F3\u6DFB\u52A0\u5176\u4ED6\u7684\u83B7\u53D6\u63A7\u4EF6\u7684\u65B9\u6CD5\uFF08\u6CE8\u610F\u4E0D\u652F\u6301\u65F6\uFF0C\u65B9\u6CD5\u5E94\u8BE5\u8FD4\u56DE<code>false</code>\uFF09\uFF0C\u76F4\u63A5\u589E\u52A0\u5BF9\u5E94\u65B9\u6CD5\uFF0C\u7136\u540E\u4F20\u5165\u8FED\u4EE3\u5668<code>iteratorUploadObj</code>\u5C31\u597D\u3002</p>`,29),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","092801.html.vue"]]);export{r as default};
