import{_ as e,o,c,b as n,d as p,a as t,e as s,r as l}from"./app.9376a9a7.js";const i="/assets/2022-11-02-10-31-11.b661df44.png",u="/assets/2022-11-02-14-27-57.cb72acbd.png",r="/assets/2022-11-02-11-24-47.64c7c7dd.png",k="/assets/2022-11-02-11-27-29.07b4e912.png",d="/assets/2022-11-02-11-28-19.fa1e257e.png",v="/assets/2022-11-02-14-45-48.9bf4a34d.png",m="/assets/2022-11-02-14-54-39.ddca1b99.png",b="/assets/2022-11-02-15-31-33.ff7177e9.png",y="/assets/2022-11-02-15-32-00.9559785e.png",w="/assets/2022-11-02-16-33-07.e14ef7f4.png",h="/assets/2022-11-02-16-52-49.5bcd1fa0.png",f={},g=t('<h2 id="\u6811" tabindex="-1"><a class="header-anchor" href="#\u6811" aria-hidden="true">#</a> \u6811</h2><h3 id="\u4E00\u4E9B\u4E13\u7528\u540D\u8BCD" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u4E13\u7528\u540D\u8BCD" aria-hidden="true">#</a> \u4E00\u4E9B\u4E13\u7528\u540D\u8BCD</h3><p>\u6DF1\u5EA6\uFF1A\u8282\u70B9\u7684\u6DF1\u5EA6\u53D6\u51B3\u4E8E\u5B83\u7684\u7956\u5148\u8282\u70B9\u7684\u6570\u91CF</p><p>\u6811\u7684\u9AD8\u5EA6\uFF1A\u6839\u8282\u70B9\u8868\u793A\u7B2C0\u5C42\uFF0C\u5176\u5B50\u8282\u70B9\u4E3A\u7B2C1\u5C42\uFF0C\u6700\u9AD8\u5C42\u4E5F\u5C31\u662F\u6700\u5E95\u8F88\u7684\u5B59\u5B50\u8282\u70B9\u6240\u5728\u4F4D\u7F6E\u7684\u5C42\u6570\u5373\u4E3A\u6811\u7684\u9AD8\u5EA6</p><p>\u5B50\u6811\uFF1A\u5B50\u6811\u7531\u8282\u70B9\u548C\u5B83\u7684\u540E\u4EE3\u6784\u6210</p><p>\u5185\u90E8\u8282\u70B9\uFF1A\u81F3\u5C11\u6709\u4E00\u4E2A\u5B50\u8282\u70B9\u7684\u8282\u70B9</p><p>\u5916\u90E8\u8282\u70B9\uFF1A\u6CA1\u6709\u5B50\u8282\u70B9\u7684\u8282\u70B9\uFF08\u53F6\u5B50\u8282\u70B9\uFF09</p><p>\u4E8C\u53C9\u6811\uFF1A\u8282\u70B9\u6700\u591A\u53EA\u80FD\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\uFF1A\u4E00\u4E2A\u662F\u5DE6\u4FA7\u5B50\u8282\u70B9\uFF0C\u53E6\u4E00\u4E2A\u662F\u53F3\u4FA7\u5B50\u8282\u70B9</p><p>\u4E8C\u53C9\u641C\u7D22\u6811\uFF08BST\uFF09\uFF1A\u5F52\u5C5E\u4E8E\u4E8C\u53C9\u6811\u5206\u7C7B\u4E2D\uFF0C\u5DE6\u4FA7\u5B50\u8282\u70B9\u5B58\u50A8\u6BD4\u7236\u8282\u70B9\u5C0F\u7684\u503C\uFF0C\u53F3\u4FA7\u5B50\u8282\u70B9\u5B58\u50A8\u6BD4\u7236\u8282\u70B9\u5927\u7684\u503C\uFF08<span style="color:pink;">\u6CE8\u610F\uFF0C\u4E00\u5B9A\u662F\u5DE6\u8FB9\u7684\u6240\u6709\u8282\u70B9\u90FD\u5C0F\u4E8E\u53F3\u4FA7\u7684\u8282\u70B9\uFF0C\u6240\u4EE5\u6700\u5C0F\u7684\u503C\u5C31\u662F\u6700\u5DE6\u8FB9\u7684\u8282\u70B9\uFF0C\u6700\u5927\u7684\u503C\u5C31\u662F\u6700\u53F3\u8FB9\u7684\u8282\u70B9</span>\uFF09\uFF0C\u4E0B\u56FE\u5C31\u662F\u4E00\u9897BST</p><p><img src="'+i+'" alt="\u4E8C\u53C9\u641C\u7D22\u6811"></p><p>BST\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\u5C31\u662F\u6811\u7684\u4E00\u6761\u8FB9\u53EF\u80FD\u4F1A\u975E\u5E38\u6DF1\uFF1B\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6811\u7684\u4E00\u6761\u5206\u652F\u4F1A\u6709\u5F88\u591A\u5C42\uFF0C\u800C\u5176\u4ED6\u7684\u5206\u652F\u5374\u53EA\u6709\u51E0\u5C42\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5728\u67D0\u6761\u8FB9\u6DFB\u52A0\u3001\u79FB\u9664\u3001\u641C\u7D22\u67D0\u4E2A\u8282\u70B9\u65F6\u4F1A\u5F15\u8D77\u4E00\u4E9B\u6027\u80FD\u95EE\u9898\uFF0C\u6240\u4EE5\u5F15\u51FA\u4E86\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811\uFF08AVL\uFF09</p><p><img src="'+u+`" alt="btbst"></p><p>\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811\uFF08AVL\uFF09\uFF1A\u4EFB\u4F55\u4E00\u4E2A\u8282\u70B9\u5DE6\u53F3\u4E24\u4FA7\u5B50\u6811\u7684\u9AD8\u5EA6\u4E4B\u5DEE\u6700\u591A\u4E3A1</p><h3 id="\u5B9E\u73B0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5</h3><ul><li>insert(key)</li><li>search(key)</li><li>inOrderTraverse()\uFF1A\u4E2D\u5E8F\u904D\u5386</li><li>preOrderTraverse()\uFF1A\u5148\u5E8F\u904D\u5386</li><li>postOrderTraverse()\uFF1A\u540E\u5E8F\u904D\u5386</li><li>min()</li><li>max()</li><li>remove(key)</li></ul><h4 id="insert\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#insert\u65B9\u6CD5" aria-hidden="true">#</a> insert\u65B9\u6CD5</h4><ul><li>\u6839\u8282\u70B9\u662F\u5426\u4E3A\u7A7A</li><li>\u6839\u8282\u70B9\u975E\u7A7A\u4E14\u63D2\u5165\u503C\u5C0F\u4E8E\u8282\u70B9\u503C\uFF0C\u90A3\u4E48\u65B0\u589E\u8282\u70B9\u63D2\u5165\u5DE6\u4FA7\uFF0C\u5426\u5219\u65B0\u589E\u8282\u70B9\u63D2\u5165\u53F3\u4FA7</li><li>\u5DE6\u53F3\u4FA7\u8282\u70B9\u63D2\u5165\u8FC7\u7A0B\u4E2D\u4E5F\u9700\u8981\u5224\u65AD\u662F\u5426\u5DE6\u53F3\u4FA7\u8282\u70B9\u4E3A\u7A7A\uFF0C\u975E\u7A7A\u7684\u60C5\u51B5\u4E0B\u9012\u5F52\u8FDB\u884C\u5FAA\u73AF\u64CD\u4F5C</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">insert</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5C0F\u4E8E\u63D2\u5165\u5DE6\u4FA7</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
      node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

    <span class="token keyword">else</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5927\u4E8E\u6216\u7B49\u4E8E\u63D2\u5165\u53F3\u4FA7\uFF08\u4F46\u662F\u7B49\u4E8E\u8FD9\u4E2A\u60C5\u51B5\u4E0D\u5408\u7406\uFF09</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
      node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

    <span class="token keyword">else</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5148\u4E2D\u540E\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5148\u4E2D\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u5148\u4E2D\u540E\u5E8F\u904D\u5386</h4><ul><li>\u90FD\u662F\u4ECE\u6839\u8282\u70B9\u51FA\u53D1</li><li>\u4E2D\u5E8F\uFF1A\u5DE6\uFF08\u5B50\u8282\u70B9\uFF09-&gt;\u4E2D\uFF08\u7236\u8282\u70B9\uFF09-&gt;\u53F3\uFF08\u5B50\u8282\u70B9\uFF09 <img src="`+r+'" alt="\u4E2D\u5E8F"><small style="text-align:center;display:inline-block;width:100%;">3 5 6 7 8 9 10 11 12 13 14 15 18 20 25</small></li><li>\u5148\u5E8F\uFF1A\u4E2D\uFF08\u7236\u8282\u70B9\uFF09-&gt;\u5DE6\uFF08\u5B50\u8282\u70B9\uFF09-&gt;\u53F3\uFF08\u5B50\u8282\u70B9\uFF09 <img src="'+k+'" alt="\u5148\u5E8F"><small style="text-align:center;display:inline-block;width:100%;">11 7 5 3 6 9 8 10 15 13 12 14 20 18 25</small></li><li>\u540E\u5E8F\uFF1A\u5DE6\uFF08\u5B50\u8282\u70B9\uFF09-&gt;\u53F3\uFF08\u5B50\u8282\u70B9\uFF09-&gt;\u4E2D\uFF08\u7236\u8282\u70B9\uFF09 <img src="'+d+`" alt="\u540E\u5E8F"><small style="text-align:center;display:inline-block;width:100%;">3 6 5 8 10 9 7 12 14 13 18 25 20 15 11</small></li><li>\u53C2\u6570cb\u4EE3\u8868\u4F60\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u6253\u5370\u5B57\u7B26\u4E32\u7684\u51FD\u6570</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">inOrderTraverse</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">preOrderTraverse</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">postOrderTraverse</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token function">postOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u641C\u7D22\u6811\u4E2D\u7684\u503C" tabindex="-1"><a class="header-anchor" href="#\u641C\u7D22\u6811\u4E2D\u7684\u503C" aria-hidden="true">#</a> \u641C\u7D22\u6811\u4E2D\u7684\u503C</h4><ul><li>min\uFF08\u6700\u5DE6\u8FB9\u8282\u70B9\uFF09</li><li>max\uFF08\u6700\u53F3\u8FB9\u8282\u70B9\uFF09</li><li>search\uFF08\u5C0F\u4E8E\u627E\u5DE6\u8FB9\u8282\u70B9\uFF0C\u7B49\u4E8E\u8FD4\u56DEtrue\uFF0C\u5927\u4E8E\u627E\u53F3\u8FB9\u8282\u70B9\uFF0C\u8282\u70B9\u4E3A\u7A7A\u8FD4\u56DEfalse\u8868\u793A\u672A\u627E\u5230\uFF09</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// BST\u6700\u5DE6\u4FA7\u8282\u70B9\u5373\u4E3A\u6700\u5C0F\u503C</span>
<span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">minNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token function">minNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> current <span class="token operator">=</span> node

  <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    current <span class="token operator">=</span> current<span class="token punctuation">.</span>left

  <span class="token keyword">return</span> current
<span class="token punctuation">}</span>

<span class="token comment">// BST\u6700\u53F3\u4FA7\u8282\u70B9\u5373\u4E3A\u6700\u5927\u503C</span>
<span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">maxNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token function">maxNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> current <span class="token operator">=</span> node

  <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    current <span class="token operator">=</span> current<span class="token punctuation">.</span>right

  <span class="token keyword">return</span> current
<span class="token punctuation">}</span>

<span class="token function">search</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token function">searchNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

  <span class="token keyword">else</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u79FB\u9664\u4E00\u4E2A\u8282\u70B9-\u5DE8tm\u4E00\u822C\u96BE" tabindex="-1"><a class="header-anchor" href="#\u79FB\u9664\u4E00\u4E2A\u8282\u70B9-\u5DE8tm\u4E00\u822C\u96BE" aria-hidden="true">#</a> \u79FB\u9664\u4E00\u4E2A\u8282\u70B9\uFF08\u5DE8tm\u4E00\u822C\u96BE\uFF09</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BFB\u627E\u7684\u503C\u5C0F\u4E8E\u5F53\u524D\u8282\u70B9\uFF0C\u90A3\u4E48\u5BFB\u627E\u5DE6\u4FA7</span>
    node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> node
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BFB\u627E\u7684\u503C\u5927\u4E8E\u5F53\u524D\u8282\u70B9\uFF0C\u90A3\u4E48\u5BFB\u627E\u53F3\u4FA7</span>
    node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> node
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u627E\u5230\u8282\u70B9\u6267\u884C\u5220\u9664\u64CD\u4F5C</span>

    <span class="token comment">// \u6267\u884C\u4E09\u79CD\u7279\u6B8A\u60C5\u51B5</span>
    <span class="token comment">// 1 - \u5F53\u524D\u8282\u70B9\u4E3A\u53F6\u5B50\u8282\u70B9</span>
    <span class="token comment">// 2 - \u5F53\u524D\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9</span>
    <span class="token comment">// 3 - \u5F53\u524D\u8282\u70B9\u5B58\u5728\u4E24\u4E2A\u5B50\u8282\u70B9</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">return</span> node
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node <span class="token operator">=</span> node<span class="token punctuation">.</span>right
      <span class="token keyword">return</span> node
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node <span class="token operator">=</span> node<span class="token punctuation">.</span>left
      <span class="token keyword">return</span> node
    <span class="token punctuation">}</span>

    <span class="token comment">//                    \u5220\u9664\u4E3A 17 \u7684\u8282\u70B9</span>
    <span class="token comment">//             12                           12</span>
    <span class="token comment">//          8      17         =&gt;         8      18</span>
    <span class="token comment">//        6  9   13  20                6  9   13  20</span>
    <span class="token comment">//                 18  21                           21</span>

    <span class="token keyword">const</span> aux <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">minNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token operator">!</span>
    node<span class="token punctuation">.</span>key <span class="token operator">=</span> aux<span class="token punctuation">.</span>key
    node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> aux<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> node
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u8FD9\u4E2A\u65B9\u6CD5\u8DDFsearch\u5F88\u7C7B\u4F3C\uFF0C\u5C0F\u4E8E\u6216\u5927\u4E8E\u7684\u60C5\u51B5\u4E0B\u5BFB\u627E\u5DE6\u8FB9\u8282\u70B9\u6216\u8005\u53F3\u8FB9\u8282\u70B9\uFF0C\u6700\u7EC8\u7684\u5220\u9664\u64CD\u4F5C\u5176\u5B9E\u662F\u5728\u7B49\u4E8E\u7684\u65F6\u5019\u8FDB\u884C\uFF0C\u7B49\u4E8E\u60C5\u51B5\u4E0B\u5B58\u5728\u4E09\u79CD\u7279\u522B\u7684\u60C5\u51B5\uFF0C\u9700\u8981\u6267\u884C\u4E0D\u540C\u7684\u64CD\u4F5C\uFF0C\u5C24\u5176\u6CE8\u610F\u7684\u662F\u5F53\u524D\u8282\u70B9\u5B58\u5728\u4E24\u4E2A\u5B50\u8282\u70B9\u7684\u65F6\u5019\uFF01\uFF01</p><h3 id="\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811-\u5DE8tm\u975E\u5E38\u96BE" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811-\u5DE8tm\u975E\u5E38\u96BE" aria-hidden="true">#</a> <span style="color:pink;">\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811\uFF08\u5DE8tm\u975E\u5E38\u96BE\uFF09</span></h3><p>AVL\uFF08\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811\uFF09\uFF1A\u4EFB\u610F\u4E00\u4E2A\u8282\u70B9\uFF08\u4E0D\u8BBA\u6DF1\u5EA6\uFF09\u7684\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u9AD8\u5EA6\u6700\u591A\u76F8\u5DEE1\uFF0C\u76EE\u7684\u662F\u9632\u6B62\u4E8C\u53C9\u641C\u7D22\u6811\u5355\u8FB9\u8FC7\u957F\u4ECE\u800C\u5BFC\u81F4\u641C\u7D22\u3001\u63D2\u5165\u3001\u5220\u9664\u6548\u7387\u4E0B\u964D\uFF01\uFF01</p><h4 id="\u8282\u70B9\u7684\u9AD8\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u8282\u70B9\u7684\u9AD8\u5EA6" aria-hidden="true">#</a> \u8282\u70B9\u7684\u9AD8\u5EA6</h4><p>\u8282\u70B9\u7684\u9AD8\u5EA6\uFF1A\u4ECE\u8282\u70B9\u5230\u5176\u4EFB\u610F\u5B50\u8282\u70B9\u7684\u8FB9\u7684\u6700\u5927\u503C</p><p><img src="`+v+`" alt="\u8282\u70B9\u9AD8\u5EA6"></p><p>\u8BA1\u7B97\u65B9\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">getNodeHeight</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>

  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNodeHeight</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNodeHeight</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5E73\u8861\u56E0\u5B50" tabindex="-1"><a class="header-anchor" href="#\u5E73\u8861\u56E0\u5B50" aria-hidden="true">#</a> \u5E73\u8861\u56E0\u5B50</h4><p>\u5E73\u8861\u56E0\u5B50\uFF1A\u8282\u70B9\u7684\u5E73\u8861\u56E0\u5B50 = \u53F3\u5B50\u6811\u7684\u9AD8\u5EA6\uFF08\u6700\u957F\u8FB9\u6761\u6570\uFF09 - \u5DE6\u5B50\u6811\u7684\u9AD8\u5EA6\uFF08\u6700\u957F\u8FB9\u6761\u6570\uFF09\u6216\u8005 \u5DE6\u5B50\u6811\u7684\u9AD8\u5EA6\uFF08\u6700\u957F\u8FB9\u6761\u6570\uFF09 - \u53F3\u5B50\u6811\u7684\u9AD8\u5EA6\uFF08\u6700\u957F\u8FB9\u6761\u6570\uFF09</p><p><img src="`+m+`" alt="\u5E73\u8861\u56E0\u5B50"></p><p>\u8BA1\u7B97\u65B9\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> BalanceFactor <span class="token punctuation">{</span>
  <span class="token constant">UNBALANCED_RIGHT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">SLIGHTLY_UNBALANCED_RIGHT</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token constant">BALANCED</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token constant">SLIGHTLY_UNBALANCED_LEFT</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token constant">UNBALANCED_LEFT</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> heightDifference <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNodeHeight</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNodeHeight</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>heightDifference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">UNBALANCED_RIGHT</span>
    <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">SLIGHTLY_UNBALANCED_RIGHT</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">SLIGHTLY_UNBALANCED_LEFT</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">UNBALANCED_LEFT</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">BALANCED</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5E73\u8861\u64CD\u4F5C\u2014\u2014avl\u65CB\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u5E73\u8861\u64CD\u4F5C\u2014\u2014avl\u65CB\u8F6C" aria-hidden="true">#</a> \u5E73\u8861\u64CD\u4F5C\u2014\u2014AVL\u65CB\u8F6C</h4><p>LL\uFF08\u5411\u53F3\u7684\u5355\u65CB\u8F6C\uFF09\uFF1A\u8282\u70B9\u7684\u5DE6\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\u5927\u4E8E\u53F3\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\u65F6\uFF0C\u5E76\u4E14\u5DE6\u4FA7\u5B50\u8282\u70B9\u4E5F\u662F\u5E73\u8861\u6216\u5DE6\u4FA7\u8F83\u91CD\u7684 <img src="`+b+`" alt="LL"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">rotationLL</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tmp <span class="token operator">=</span> node<span class="token punctuation">.</span>left
  node<span class="token punctuation">.</span>left <span class="token operator">=</span> tmp<span class="token operator">!</span><span class="token punctuation">.</span>right
  tmp<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> node
  <span class="token keyword">return</span> tmp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RR\uFF08\u5411\u5DE6\u7684\u5355\u65CB\u8F6C\uFF09\uFF1A\u8282\u70B9\u7684\u53F3\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\u5927\u4E8E\u5DE6\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\uFF0C\u5E76\u4E14\u53F3\u4FA7\u5B50\u8282\u70B9\u4E5F\u662F\u5E73\u8861\u6216\u53F3\u4FA7\u8F83\u91CD\u7684 <img src="`+y+`" alt="RR"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">rotationRR</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tmp <span class="token operator">=</span> node<span class="token punctuation">.</span>right
  node<span class="token punctuation">.</span>right <span class="token operator">=</span> tmp<span class="token operator">!</span><span class="token punctuation">.</span>left
  tmp<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> node
  <span class="token keyword">return</span> tmp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LR\uFF08\u5411\u53F3\u7684\u53CC\u65CB\u8F6C\uFF09\uFF1A\u8282\u70B9\u7684\u5DE6\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\u5927\u4E8E\u53F3\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\uFF0C\u5E76\u4E14\u5DE6\u4FA7\u5B50\u8282\u70B9\u53F3\u4FA7\u8F83\u91CD <img src="`+w+`" alt="LR"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">rotationLR</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRR</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token operator">!</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLL</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RL\uFF08\u5411\u5DE6\u7684\u53CC\u65CB\u8F6C\uFF09\uFF1A\u8282\u70B9\u7684\u53F3\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\u5927\u4E8E\u5DE6\u4FA7\u5B50\u8282\u70B9\u7684\u9AD8\u5EA6\uFF0C\u5E76\u4E14\u53F3\u4FA7\u5B50\u8282\u70B9\u5DE6\u4FA7\u8F83\u91CD <img src="`+h+`" alt="RL"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">rotationRL</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLL</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token operator">!</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRR</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u63D2\u5165\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u64CD\u4F5C" aria-hidden="true">#</a> \u63D2\u5165\u64CD\u4F5C</h4><ul><li>\u8BA1\u7B97\u5E73\u8861\u56E0\u5B50</li><li>=UNBALANCED_RIGHT\uFF08\u53F3\u8FB9\u5931\u53BB\u5E73\u8861\uFF09 \u8D70 RR\uFF08\u53F3\u4FA7\u8282\u70B9\u503C\u5C0F\u4E8E\u63D2\u5165\u503C\uFF09 \u6216 RL\uFF08\u53F3\u4FA7\u8282\u70B9\u503C\u5927\u4E8E\u63D2\u5165\u503C\uFF09</li><li>=UNBALANCED_LEFT\uFF08\u5DE6\u8FB9\u5931\u53BB\u5E73\u8861\uFF09 \u8D70 LL\uFF08\u5DE6\u4FA7\u8282\u70B9\u503C\u5927\u4E8E\u63D2\u5165\u503C\uFF09 \u6216 LR\uFF08\u5DE6\u4FA7\u8282\u70B9\u503C\u5C0F\u4E8E\u63D2\u5165\u503C\uFF09</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">protected</span> <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

  <span class="token keyword">else</span>
    <span class="token keyword">return</span> node

  <span class="token keyword">const</span> balanceState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>balanceState <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">UNBALANCED_RIGHT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>right<span class="token operator">!</span><span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Right right case</span>
      node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRR</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// Right left case</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRL</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>balanceState <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">UNBALANCED_LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token operator">!</span><span class="token punctuation">.</span>left<span class="token operator">!</span><span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Left left case</span>
      node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLL</span><span class="token punctuation">(</span>node<span class="token operator">!</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// Left right case</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLR</span><span class="token punctuation">(</span>node<span class="token operator">!</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> node
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u79FB\u9664\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u79FB\u9664\u64CD\u4F5C" aria-hidden="true">#</a> \u79FB\u9664\u64CD\u4F5C</h4><ul><li>\u4EE3\u7801\u8DDFBST\u7684\u4E00\u6837\uFF0C\u4E0D\u8FC7\u591A\u4E86\u79FB\u9664\u8282\u70B9\u64CD\u4F5C\u5916\uFF0C\u8FD8\u9700\u8981\u9A8C\u8BC1\u662F\u5426\u5931\u53BB\u5E73\u8861\uFF0C\u82E5\u5931\u53BB\u5E73\u8861\u90A3\u4E48\u9700\u8981\u8FDB\u884C\u65CB\u8F6C\u64CD\u4F5C\uFF01\uFF01</li><li>\u53EF\u4EE5\u5047\u8BBE\u5220\u9664\u6811\u8282\u70B9\u540E\u53D8\u6210\u524D\u9762\u7684\u5E73\u8861\u64CD\u4F5C\u7684\u56FE\u793A\u6765\u8F85\u52A9\u4EE3\u7801\u9605\u8BFB</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">protected</span> <span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  node <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">removeNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> node

  <span class="token keyword">const</span> balanceState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>balanceState <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">UNBALANCED_LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// node.left\u5FC5\u7136\u4E0D\u53EF\u80FD\u4E3Anull\uFF01\uFF01\u56E0\u4E3A getBalanceFactor\u5185\u90E8\u8FD4\u56DE\u5E73\u8861\u56E0\u5B50\u4E3A UNBALANCED_LEFT \u8BF4\u660E\u5DE6\u4FA7\u957F\u5EA6\u51CF\u53BB\u53F3\u4FA7\u957F\u5EA6\u4E3A2</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">BALANCED</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">SLIGHTLY_UNBALANCED_LEFT</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLL</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">SLIGHTLY_UNBALANCED_RIGHT</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLR</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>balanceState <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">UNBALANCED_RIGHT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// node.right\u5FC5\u7136\u4E0D\u53EF\u80FD\u4E3Anull\uFF01\uFF01\u56E0\u4E3A getBalanceFactor\u5185\u90E8\u8FD4\u56DE\u5E73\u8861\u56E0\u5B50\u4E3A UNBALANCED_RIGHT \u8BF4\u660E\u53F3\u4FA7\u957F\u5EA6\u51CF\u53BB\u5DE6\u4FA7\u957F\u5EA6\u4E3A2</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">BALANCED</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">SLIGHTLY_UNBALANCED_RIGHT</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRR</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalanceFactor</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">===</span> BalanceFactor<span class="token punctuation">.</span><span class="token constant">SLIGHTLY_UNBALANCED_LEFT</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRL</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> node
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EA2\u9ED1\u6811-\u5DE8tm\u8D85\u7EA7\u96BE" tabindex="-1"><a class="header-anchor" href="#\u7EA2\u9ED1\u6811-\u5DE8tm\u8D85\u7EA7\u96BE" aria-hidden="true">#</a> <span style="color:red;">\u7EA2\u9ED1\u6811\uFF08\u5DE8tm\u8D85\u7EA7\u96BE\uFF09</span></h3>`,55),N=s("\u6211\u51B3\u5B9A\u653E\u5F03\uFF0C\u771F\u7684\u592Atm\u7684\u96BE\u4E86"),L=n("br",null,null,-1),_=s(),T={href:"https://www.jianshu.com/p/e136ec79235c",target:"_blank",rel:"noopener noreferrer"},B=s("\u7EA2\u9ED1\u6811\u7406\u8BBA1"),A=n("br",null,null,-1),R={href:"https://www.cnblogs.com/sxkgeek/p/9349931.html#_label3",target:"_blank",rel:"noopener noreferrer"},C=s("\u4E00\u4E9B\u7279\u522B\u6811\u7684\u4ECB\u7ECD"),x=s("\uFF08\u6CE8\u610F\u91CC\u9762\u7684\u4E00\u4E9B\u63CF\u8FF0\u6709\u8BEF\uFF0C\u8BB0\u5F97\u7504\u522B\uFF09"),E=t(`<p>\u4E8C\u53C9\u641C\u7D22\u6811\u8FDB\u884C\u63D2\u5165\u6216\u8005\u5220\u9664\u8282\u70B9\u64CD\u4F5C\u90FD\u8FDB\u884C\u5E73\u8861\u56E0\u5B50\u7684\u5224\u65AD\uFF0C\u8FDB\u800C\u8FDB\u884C\u4E0D\u540C\u7684\u65CB\u8F6C\u65B9\u5F0F\u4ECE\u800C\u5C06\u4E8C\u53C9\u641C\u7D22\u6811\u8F6C\u6362\u4E3A\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811\u3002</p><p>\u81EA\u5E73\u8861\u4E8C\u53C9\u641C\u7D22\u6811\u9700\u8981\u65CB\u8F6C\u64CD\u4F5C\uFF0C\u5BF9\u4E8E\u9891\u7E41\u7684\u63D2\u5165\u6216\u8005\u5220\u9664\u64CD\u4F5C\u6027\u80FD\u4F1A\u5F88\u5DEE\uFF0C\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u8003\u8651\u4F7F\u7528\u7EA2\u9ED1\u6811\u3002</p><p>\u7EA2\u9ED1\u6811\u662F\u7528\u975E\u4E25\u683C\u7684\u5E73\u8861\u6765\u6362\u53D6\u589E\u5220\u8282\u70B9\u65F6\u5019\u65CB\u8F6C\u6B21\u6570\u7684\u964D\u4F4E\uFF0C\u4EFB\u4F55\u4E0D\u5E73\u8861\u90FD\u4F1A\u5728\u4E09\u6B21\u65CB\u8F6C\u4E4B\u5185\u89E3\u51B3\uFF0C\u800CAVL\u662F\u4E25\u683C\u5E73\u8861\u6811\uFF0C\u56E0\u6B64\u5728\u589E\u52A0\u6216\u8005\u5220\u9664\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u6839\u636E\u4E0D\u540C\u60C5\u51B5\uFF0C\u65CB\u8F6C\u7684\u6B21\u6570\u6BD4\u7EA2\u9ED1\u6811\u8981\u591A\u3002\u6240\u4EE5\u7EA2\u9ED1\u6811\u7684\u63D2\u5165\u6548\u7387\u66F4\u9AD8\uFF01\uFF01\uFF01</p><p>\u7279\u6027</p><ul><li>\u8282\u70B9\u4E0D\u662F\u7EA2\u7684\u5C31\u662F\u9ED1\u7684</li><li>\u6811\u7684\u6839\u8282\u70B9\u662F\u9ED1\u7684</li><li>\u6240\u6709\u53F6\u8282\u70B9\u90FD\u662F\u9ED1\u7684</li><li>\u5982\u679C\u4E00\u4E2A\u8282\u70B9\u662F\u7EA2\u7684\uFF0C\u90A3\u4E48\u5B83\u7684\u4E24\u4E2A\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u7684</li><li>\u4E0D\u80FD\u6709\u4E24\u4E2A\u76F8\u90BB\u7684\u7EA2\u8282\u70B9\uFF0C\u4E00\u4E2A\u7EA2\u8282\u70B9\u4E0D\u80FD\u6709\u7EA2\u7684\u7236\u8282\u70B9\u6216\u5B50\u8282\u70B9</li><li>\u4ECE\u7ED9\u5B9A\u7684\u8282\u70B9\u5230\u5B83\u7684\u540E\u4EE3\u8282\u70B9\uFF08NULL\u53F6\u8282\u70B9\uFF09\u7684\u6240\u6709\u8DEF\u5F84\u5305\u542B\u76F8\u540C\u6570\u91CF\u7684\u9ED1\u8272\u8282\u70B9</li></ul><h4 id="\u63D2\u5165\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u65B9\u6CD5" aria-hidden="true">#</a> \u63D2\u5165\u65B9\u6CD5</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">insert</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedBlackNode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token comment">// \u8FD9\u91CC\uFF01\uFF01\uFF01\u9700\u8981\u5BF9\u63D2\u5165\u7684\u8282\u70B9\u7684\u5C5E\u6027\u8FDB\u884C\u4FEE\u6B63\uFF01\uFF01\uFF01</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fixTreeProperties</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u63D2\u5165\u7684\u8282\u70B9</span>
<span class="token keyword">protected</span> <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> RedBlackNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> RedBlackNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedBlackNode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      node<span class="token punctuation">.</span>left<span class="token punctuation">.</span>parent <span class="token operator">=</span> node
      <span class="token keyword">return</span> node<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedBlackNode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>right<span class="token punctuation">.</span>parent <span class="token operator">=</span> node
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>right
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63D2\u5165\u64CD\u4F5C\u4E0EBST\u76F8\u4F3C\uFF0C\u53EA\u4E0D\u8FC7\u591A\u6DFB\u52A0\u4E86\u7236\u8282\u70B9\u7684\u5F15\u7528\uFF0C\u540C\u65F6insertNode\u8FD4\u56DE\u63D2\u5165\u540E\u7684\u8282\u70B9\uFF0C\u9700\u8981\u5BF9\u8FD9\u4E2A\u8282\u70B9\u8FDB\u884C\u4FEE\u6B63\uFF08\u91CD\u65B0\u586B\u8272\u4EE5\u53CA\u65CB\u8F6C\uFF09\uFF0C\u4FEE\u6B63\u65B9\u6CD5\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">fixTreeProperties</span><span class="token punctuation">(</span>node<span class="token operator">:</span> RedBlackNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>color <span class="token operator">===</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>color <span class="token operator">!==</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent
    <span class="token keyword">const</span> grandParent <span class="token operator">=</span> parent<span class="token punctuation">.</span>parent

    <span class="token comment">// A\uFF1A\u7236\u8282\u70B9\u662F\u7237\u7237\u8282\u70B9\u7684\u5DE6\u4FA7\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>grandParent <span class="token operator">&amp;&amp;</span> grandParent<span class="token punctuation">.</span>left <span class="token operator">===</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> uncle <span class="token operator">=</span> grandParent<span class="token punctuation">.</span>right

      <span class="token comment">// 1: uncle of node is also red - only recoloring</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>uncle <span class="token operator">&amp;&amp;</span> uncle<span class="token punctuation">.</span>color <span class="token operator">===</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        grandParent<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span>
        parent<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
        uncle<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
        node <span class="token operator">=</span> grandParent
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// case 2: node is right child - left rotate</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRR</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
          node <span class="token operator">=</span> parent
          parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent<span class="token operator">!</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// case 3: node is left child - right rotate</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLL</span><span class="token punctuation">(</span>grandParent<span class="token punctuation">)</span>
        <span class="token comment">// swap color</span>
        parent<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
        grandParent<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span>
        node <span class="token operator">=</span> parent
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// B\uFF1A\u7236\u8282\u70B9\u662F\u7237\u7237\u8282\u70B9\u7684\u53F3\u4FA7\u8282\u70B9</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> uncle <span class="token operator">=</span> grandParent<span class="token operator">!</span><span class="token punctuation">.</span>left

      <span class="token comment">// case 1: uncle is read - only recoloring</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>uncle <span class="token operator">&amp;&amp;</span> uncle<span class="token punctuation">.</span>color <span class="token operator">===</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        grandParent<span class="token operator">!</span><span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span>
        parent<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
        uncle<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
        node <span class="token operator">=</span> grandParent<span class="token operator">!</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// case 2: node is left child - left rotate</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationLL</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
          node <span class="token operator">=</span> parent
          parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent<span class="token operator">!</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// case 3: node is right child - left rotate</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotationRR</span><span class="token punctuation">(</span>grandParent<span class="token operator">!</span><span class="token punctuation">)</span>
        <span class="token comment">// swap color</span>
        parent<span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
        grandParent<span class="token operator">!</span><span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">RED</span>
        node <span class="token operator">=</span> parent
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token operator">!</span><span class="token punctuation">.</span>color <span class="token operator">=</span> Colors<span class="token punctuation">.</span><span class="token constant">BLACK</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LL\u65CB\u8F6C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">rotationLL</span><span class="token punctuation">(</span>node<span class="token operator">:</span> RedBlackNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tmp <span class="token operator">=</span> node<span class="token punctuation">.</span>left
  node<span class="token punctuation">.</span>left <span class="token operator">=</span> tmp<span class="token operator">!</span><span class="token punctuation">.</span>right
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">&amp;&amp;</span> tmp<span class="token operator">!</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    tmp<span class="token operator">!</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span>parent <span class="token operator">=</span> node

  tmp<span class="token operator">!</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> tmp<span class="token operator">!</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
      node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> tmp<span class="token operator">!</span>

    <span class="token keyword">else</span>
      node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">=</span> tmp<span class="token operator">!</span>
  <span class="token punctuation">}</span>
  tmp<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> node
  node<span class="token punctuation">.</span>parent <span class="token operator">=</span> tmp<span class="token operator">!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RR\u65CB\u8F6C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">rotationRR</span><span class="token punctuation">(</span>node<span class="token operator">:</span> RedBlackNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tmp <span class="token operator">=</span> node<span class="token punctuation">.</span>right
  node<span class="token punctuation">.</span>right <span class="token operator">=</span> tmp<span class="token operator">!</span><span class="token punctuation">.</span>left
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> tmp<span class="token operator">!</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    tmp<span class="token operator">!</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span>parent <span class="token operator">=</span> node

  tmp<span class="token operator">!</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> tmp<span class="token operator">!</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
      node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> tmp<span class="token operator">!</span>

    <span class="token keyword">else</span>
      node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">=</span> tmp<span class="token operator">!</span>
  <span class="token punctuation">}</span>
  tmp<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> node
  node<span class="token punctuation">.</span>parent <span class="token operator">=</span> tmp<span class="token operator">!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5220\u9664\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u65B9\u6CD5" aria-hidden="true">#</a> \u5220\u9664\u65B9\u6CD5</h4><p>\u4E66\u4E2D\u672A\u5B9E\u73B0\uFF0C\u636E\u8BF4\u5F88\u590D\u6742\uFF0C\u6BD4\u63D2\u5165\u64CD\u4F5C\u8FD8\u590D\u6742</p>`,15);function F(S,D){const a=l("ExternalLinkIcon");return o(),c("div",null,[g,n("blockquote",null,[n("p",null,[N,L,_,n("a",T,[B,p(a)]),A,n("a",R,[C,p(a)]),x])]),E])}const G=e(f,[["render",F],["__file","110101.html.vue"]]);export{G as default};
