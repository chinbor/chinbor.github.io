import{_ as o,o as c,c as l,b as n,d as a,w as i,a as r,e as s,r as e}from"./app.9376a9a7.js";const u="/assets/2022-10-27-11-03-17.8a17f9ba.png",k={},d=r(`<h2 id="\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52</h2><blockquote><p>\u5BF9\u4E8E\u56FE\u6570\u636E\u7ED3\u6784\u4EE5\u53CA\u6811\u6570\u636E\u7ED3\u6784\uFF0C\u5F88\u4F9D\u8D56\u4E8E\u9012\u5F52\u51FD\u6570\uFF01\uFF01</p></blockquote><h3 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h3><p><span style="color:pink;">\u8981\u7406\u89E3\u9012\u5F52\uFF0C\u9996\u5148\u8981\u7406\u89E3\u9012\u5F52\u3002\u2014\u2014\u4F5A\u540D</span></p><ul><li>\u76F4\u63A5\u8C03\u7528\u81EA\u8EAB\u6216\u95F4\u63A5\u8C03\u7528\u81EA\u8EAB\u3002</li><li>\u6BCF\u4E2A\u9012\u5F52\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u57FA\u7EBF\u6761\u4EF6\uFF0C\u5373\u4E00\u4E2A\u4E0D\u518D\u9012\u5F52\u8C03\u7528\u7684\u6761\u4EF6\uFF08\u505C\u6B62\u70B9\uFF09\uFF0C\u4EE5\u9632\u6B62\u65E0\u9650\u9012\u5F52\u3002</li></ul><p>\u90A3\u53E5\u540D\u8A00\u7684\u4EE3\u7801\u5B9E\u73B0</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">understandRecursion</span><span class="token punctuation">(</span>doIunderstandRecursion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> recursionAnswer <span class="token operator">=</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Do you understand recursion? &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>recursionAnswer <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u57FA\u7EBF\u6761\u4EF6\u6216\u505C\u6B62\u70B9</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">understandRecursion</span><span class="token punctuation">(</span>recursionAnswer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9012\u5F52\u8C03\u7528</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ECF\u5178\u9012\u5F52\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7ECF\u5178\u9012\u5F52\u7B97\u6CD5" aria-hidden="true">#</a> \u7ECF\u5178\u9012\u5F52\u7B97\u6CD5</h3><h4 id="\u9636\u4E58" tabindex="-1"><a class="header-anchor" href="#\u9636\u4E58" aria-hidden="true">#</a> \u9636\u4E58</h4><p>f(5) = 5 * f(4)</p><p>f(5) = 5 * (4 * f(3))</p><p>f(5) = 5 * (4 * (3 * f(2)))</p><p>f(5) = 5 * (4 * (3 * (2 * f(1))))</p><p>f(5) = 5 * (4 * (3 * (2 * (1))))</p><p>1! = 1 * 0!, 0! = 1 \u63A8\u51FA 1! = 1</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> n <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">1</span>

  <span class="token keyword">return</span> n <span class="token operator">*</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6590\u6CE2\u62C9\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u62C9\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u62C9\u5951\u6570\u5217</h4><p>0 1 1 2 3 5 8 13 21 34 ....</p><p>\u4F4D\u7F6E0\u7684\u6590\u6CE2\u90A3\u5951\u6570\u662F\u96F6\u3002</p><p>\u2751 \u4F4D\u7F6E1\u548C2\u7684\u6590\u6CE2\u90A3\u5951\u6570\u662F1\u3002</p><p>\u2751 \u4F4D\u7F6En\uFF08\u6B64\u5904n &gt; 2\uFF09\u7684\u6590\u6CE2\u90A3\u5951\u6570\u662F\u4F4D\u7F6E\uFF08n -1\uFF09\u7684\u6590\u6CE2\u90A3\u5951\u6570\u52A0\u4E0A\u4F4D\u7F6E\uFF08n -2\uFF09\u7684\u6590\u6CE2\u90A3\u5951\u6570\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0</span> <span class="token comment">// {1}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token comment">// {2}</span>
  <span class="token keyword">return</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// {3}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790\u4F4D\u7F6E5\u7684\u6590\u6CE2\u62C9\u5951\u6570\u5982\u56FE</p><p><img src="`+u+`" alt="\u6590\u6CE2\u62C9\u5951"></p><p><span style="color:pink;">\u8BB0\u5FC6\u5316\u6590\u6CE2\u62C9\u5951\u6570</span></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">fibonacciMemoization</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0</span>
  <span class="token keyword">const</span> memo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> fibonacciMem <span class="token operator">=</span> <span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>memo<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> memo<span class="token punctuation">[</span>num<span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>memo<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fibonacciMem</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonacciMem</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">fibonacciMem</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u597D\u4E8E\u524D\u8005\u7684\u5730\u65B9\u5728\u4E8E\u4E4B\u524D\u6211\u4EEC\u8BA1\u7B97\u4F4D\u7F6E 5\u7684\u65F6\u5019\uFF0C\u5176\u5B9E\u5F88\u591A\u7684\u8BA1\u7B97\u7ED3\u679C\u6CA1\u6709\u8FDB\u884C\u7F13\u5B58\uFF0C\u4E5F\u5C31\u662F f(5) = f(4) + f(3)\uFF0Cf(4) = f(3) + f(2)\uFF0C\u53EF\u4EE5\u53D1\u73B0f(3)\u5176\u5B9E\u662F\u91CD\u590D\u6267\u884C\u4E86\u7684\uFF0C\u5982\u679C\u6211\u4EEC\u80FD\u591F\u5229\u7528memo\u6570\u7EC4\u5C06\u7B2C\u4E00\u6B21\u6267\u884C\u7684\u7ED3\u679C\u7F13\u5B58\uFF0C\u540E\u9762\u76F4\u63A5\u83B7\u53D6\u7F13\u5B58\u597D\u7684\u503C\u90A3\u4E48\u5F53\u6211\u4EEC\u8BA1\u7B97\u4F4D\u7F6E\u5F88\u5927\u7684\u6590\u6CE2\u62C9\u5951\u6570\uFF0C\u6B64\u65F6\u53EF\u4EE5\u8282\u7701\u5F88\u591A\u989D\u8BA1\u7B97\u8D44\u6E90\uFF01\uFF01</p>`,27),m=s("\u5BF9\u4E8E\u9012\u5F52\u7531\u4E8E\u4F1A\u5B58\u5728\u5F88\u591A\u51FD\u6570\u7684\u8C03\u7528\u6808\u6781\u5927\u7684\u6D6A\u8D39\u5185\u5B58\u7A7A\u95F4\uFF0C\u6240\u4EE5\u53EF\u4EE5\u91C7\u53D6"),b={href:"https://www.ruanyifeng.com/blog/2015/04/tail-call.html",target:"_blank",rel:"noopener noreferrer"},v=s("\u5C3E\u8C03\u7528\u4F18\u5316"),f=s("\u7684\u624B\u6BB5\u8FDB\u884C\u8C03\u7528\u6808\u7684\u5220\u51CF"),h=n("p",null,"\uFF08\u8C03\u7528\u4F4D\u7F6E\u4EE5\u53CA\u53D8\u91CF\u90FD\u4E0D\u518D\u5F15\u7528\u5230\u4E86\uFF0C\u5916\u5C42\u51FD\u6570\u76F4\u63A5return\uFF0C\u540C\u65F6\u5916\u5C42\u51FD\u6570\u7684\u53D8\u91CF\u90FD\u4F20\u9012\u7ED9\u4E86\u5185\u5C42\u51FD\u6570\uFF01\uFF01\uFF09",-1),y=n("h4",{id:"\u6C49\u8BFA\u5854",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6C49\u8BFA\u5854","aria-hidden":"true"},"#"),s(" \u6C49\u8BFA\u5854")],-1),w=n("p",null,[n("span",{style:{color:"pink"}},"\u8FD9\u4E2A\u7406\u89E3\u8D77\u6765\u6700\u590D\u6742\uFF01\uFF01")],-1),_=s("\u6C49\u8BFA\u5854\u4EE3\u7801\u5B9E\u73B0");function g(x,M){const p=e("ExternalLinkIcon"),t=e("RouterLink");return c(),l("div",null,[d,n("p",null,[m,n("a",b,[v,a(p)]),f]),h,y,w,n("p",null,[a(t,{to:"/blogs/dataStructures/2022/102001.html"},{default:i(()=>[_]),_:1})])])}const L=o(k,[["render",g],["__file","102701.html.vue"]]);export{L as default};
