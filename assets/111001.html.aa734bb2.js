import{_ as p,o as t,c as e,b as n,d as o,a as c,e as s,r as l}from"./app.9376a9a7.js";const i="/assets/2022-11-11-13-52-35.8bc7bdaa.png",u="/assets/Dijkstra.bd7fb56e.png",k="/assets/2022-11-17-16-10-40.c5f3ae4f.png",r={},d=c('<h2 id="\u57FA\u4E8E\u56FE\u7684\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u56FE\u7684\u7B97\u6CD5" aria-hidden="true">#</a> \u57FA\u4E8E\u56FE\u7684\u7B97\u6CD5</h2><h3 id="\u6700\u77ED\u8DEF\u5F84\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6700\u77ED\u8DEF\u5F84\u7B97\u6CD5" aria-hidden="true">#</a> \u6700\u77ED\u8DEF\u5F84\u7B97\u6CD5</h3><h4 id="dijkstra\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#dijkstra\u7B97\u6CD5" aria-hidden="true">#</a> Dijkstra\u7B97\u6CD5</h4><blockquote><p>Dijkstra\u7B97\u6CD5\u662F\u4E00\u79CD\u8BA1\u7B97\u4ECE\u5355\u4E2A\u6E90\u5230\u6240\u6709\u5176\u4ED6\u6E90\u7684\u6700\u77ED\u8DEF\u5F84\u7684\u8D2A\u5FC3\u7B97\u6CD5</p></blockquote><p><img src="'+i+`" alt="\u90BB\u63A5\u77E9\u9635"></p><p>\u56FE\u793A\u7684\u56FE\u5BF9\u5E94\u7684\u90BB\u63A5\u77E9\u9635\u4EE3\u7801\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dijkstra\u7B97\u6CD5\u5B9E\u73B0\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">INF</span> <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span>

<span class="token keyword">const</span> <span class="token function-variable function">minDistance</span> <span class="token operator">=</span> <span class="token punctuation">(</span>dist<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> visited<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token constant">INF</span>
  <span class="token keyword">let</span> minIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> dist<span class="token punctuation">.</span>length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> dist<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> min<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      min <span class="token operator">=</span> dist<span class="token punctuation">[</span>v<span class="token punctuation">]</span>
      minIndex <span class="token operator">=</span> v
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> minIndex
<span class="token punctuation">}</span>

<span class="token keyword">const</span> tmp<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">dijkstra</span> <span class="token operator">=</span> <span class="token punctuation">(</span>vertices<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> graph<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> src<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dist<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> visited<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> graph<span class="token punctuation">.</span>length

  <span class="token comment">// \u521D\u59CB\u5316\u6240\u6709\u9876\u70B9\u8DDD\u79BB\u6E90\u70B9\u8DDD\u79BB\u90FD\u662F\u65E0\u7A77\u5927\uFF0C\u540C\u65F6\u6240\u6709\u9876\u70B9\u90FD\u672A\u8BBF\u95EE</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">INF</span>
    visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6E90\u70B9\u5230\u81EA\u5DF1\u7684\u8DEF\u5F84\u7F6E\u4E3A0</span>
  dist<span class="token punctuation">[</span>src<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u627E\u51FA\u8DDD\u79BB\u6E90\u70B9\u6700\u5C0F\u8DDD\u79BB\u7684\u9876\u70B9u</span>
    <span class="token keyword">const</span> u <span class="token operator">=</span> <span class="token function">minDistance</span><span class="token punctuation">(</span>dist<span class="token punctuation">,</span> visited<span class="token punctuation">)</span>

    <span class="token comment">// \u5C06\u8BE5\u9876\u70B9\u7F6E\u4E3A\u5DF2\u7ECF\u8BBF\u95EE\uFF08\u540E\u7EED\u7531\u4E8E\u5DF2\u7ECF\u8BBF\u95EE\u8FC7\u8BE5\u9876\u70B9\uFF0C\u6240\u4EE5minDistance\u4E0D\u4F1A\u518D\u6B21\u8FD4\u56DE\u8BE5\u9876\u70B9\u7D22\u5F15\uFF09</span>
    visited<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token comment">// \u904D\u5386\u9876\u70B9u\u7684\u6240\u6709\u90BB\u63A5\u70B9v</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1. !visited[v]\u8868\u793A\u9876\u70B9\u672A\u88AB\u8BBF\u95EE</span>
      <span class="token comment">// 2. graph[u][v] !== 0 &amp;&amp; dist[u] !== INF\u8868\u793A\u5B58\u5728\u90BB\u63A5\u70B9\u8DEF\u5F84</span>
      <span class="token comment">// 3. dist[u] + graph[u][v] &lt; dist[v] \u5DF2\u8BBF\u95EE\u9876\u70B9u\u5230\u6E90\u70B9src\u7684\u8DDD\u79BBdist[u]\u52A0\u4E0A\u5DF2\u8BBF\u95EE\u9876\u70B9u\u5230\u90BB\u63A5\u70B9v\u7684\u8DDD\u79BB\u662F\u5426\u5C0F\u4E8E v\u5230\u6E90\u70B9src\u7684\u8DDD\u79BB</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> graph<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> dist<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token constant">INF</span> <span class="token operator">&amp;&amp;</span> dist<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> graph<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&lt;</span> dist<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dist<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> dist<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> graph<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span>

        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>vertices<span class="token punctuation">[</span>src<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>vertices<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        tmp<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>vertices<span class="token punctuation">[</span>src<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>vertices<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>vertices<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dist<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> tmp<span class="token punctuation">,</span> dist <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u5DF1\u589E\u52A0\u4E86\u989D\u5916\u7684\u6253\u5370\u8DEF\u5F84\u4EE3\u7801\uFF0C\u4F7F\u7528vitest\u6D4B\u8BD5\u4EE3\u7801\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;Dijkstra&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> vertices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">]</span>

  <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">dijkstra</span><span class="token punctuation">(</span>vertices<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tmp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    {
      &quot;B -&gt; C&quot;: &quot;B -&gt; B -&gt; C, 1&quot;,
      &quot;B -&gt; D&quot;: &quot;B -&gt; B -&gt; D, 4&quot;,
      &quot;B -&gt; E&quot;: &quot;B -&gt; B -&gt; E, 2&quot;,
      &quot;B -&gt; F&quot;: &quot;B -&gt; E -&gt; F, 4&quot;,
    }
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">dijkstra</span><span class="token punctuation">(</span>vertices<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dist<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      9007199254740991,
      0,
      1,
      4,
      2,
      4,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790\u8FC7\u7A0B\u5982\u4E0B</p><ul><li>dist\u6570\u7EC4\u5B58\u653E\u9876\u70B9\u8DDD\u79BB\u6E90\u70B9\u6700\u77ED\u8DDD\u79BB\u7684\u6570\u503C</li><li>visited\u6570\u7EC4\u5B58\u653E\u9876\u70B9\u662F\u5426\u8BBF\u95EE\u8FC7\uFF08\u907F\u514D\u91CD\u590D\u8BBF\u95EE\uFF09</li><li>\u5185\u90E8\u5FAA\u73AF\u63A7\u5236\u4E8C\u7EF4\u6570\u7EC4\u7684\u6A2A\u5411\u904D\u5386\u90BB\u63A5\u70B9\u5E76\u6BD4\u8F83\u5176\u4E0E\u6E90\u70B9\u8DDD\u79BB\u5E76\u66F4\u65B0</li><li>\u5916\u90E8\u5FAA\u73AF\u63A7\u5236\u4E8C\u7EF4\u6570\u7EC4\u7684\u7EB5\u5411\uFF08\u6CE8\u610F<code>length-1</code>\uFF0C \u6211\u4E5F\u4E0D\u662F\u5F88\u61C2\u4E3A\u5565\uFF0C\u4F46\u662F\u4E0B\u56FE\u7684\u5206\u6790\u5C31\u662F\u80FD\u8BC1\u660E\u65E0\u9700\u5916\u90E8\u591A\u4E00\u6B21\u5FAA\u73AF\u{1F602}\uFF09</li></ul><p><img src="`+u+`" alt="\u5206\u6790\u6D41\u7A0B\u56FE"></p><h4 id="floyd-warshall\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#floyd-warshall\u7B97\u6CD5" aria-hidden="true">#</a> Floyd-Warshall\u7B97\u6CD5</h4><blockquote><p>Floyd-Warshall\u7B97\u6CD5\u662F\u4E00\u79CD\u8BA1\u7B97\u56FE\u4E2D\u6240\u6709\u6700\u77ED\u8DEF\u5F84\u7684\u52A8\u6001\u89C4\u5212\u7B97\u6CD5</p></blockquote><ol><li>\u6839\u636Egraph\u751F\u6210dist\u6570\u7EC4\u5E76\u521D\u59CB\u5316</li><li>\u5F15\u5165\u4E2D\u95F4\u70B9k\uFF0C\u5BFB\u627Ei -&gt; j = (i -&gt; k) + (k -&gt; j)</li></ol><p>\u4EE3\u7801\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">floydWarshall</span> <span class="token operator">=</span> <span class="token punctuation">(</span>graph<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dist<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> graph<span class="token punctuation">.</span>length

  <span class="token comment">// \u521D\u59CB\u5316dist\u6570\u7EC4\uFF08\u5BF9\u89D2\u7EBF\u90FD\u662F0\uFF0C\u5176\u4F59\u4F4D\u7F6E\u4FDD\u6301\u539F\u6765graph\u7684\u6570\u503C\uFF09</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5BF9\u89D2\u7EBF\u90FD\u662F0\uFF0C\u81EA\u5DF1\u5230\u81EA\u5DF1\uFF01</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> j<span class="token punctuation">)</span>
        dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

      <span class="token comment">// \u5982\u679C graph[i][j] \u4E3AINF\u8868\u793A i -&gt; j\u4E0D\u5B58\u5728\u8DDD\u79BB\uFF01\uFF01</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFinite</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">Infinity</span>

      <span class="token comment">// i -&gt; j\u5B58\u5728\u8DDD\u79BB\u90A3\u4E48\u5C31\u7B49\u4E8E\u56FE\u4E2D\u7684\u6743\u503C</span>
      <span class="token keyword">else</span>
        dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5F15\u5165\u4E2D\u95F4\u70B9k\uFF0C\u6240\u4EE5 i -&gt; j = (i -&gt; k) + (k -&gt; j)\u8DDD\u79BB\u4E4B\u548C\uFF0C</span>
  <span class="token comment">// \u6838\u5FC3\u5C31\u662F dist[i][k] + dist[k][j] &lt; dist[i][j] \u8FDB\u800C\u66F4\u65B0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+</span> dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
          dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+</span> dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> dist
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 vitest\u6D4B\u8BD5\u4EE3\u7801\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;FloydWarshall&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">INF</span> <span class="token operator">=</span> <span class="token number">Infinity</span>
  <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">,</span> <span class="token constant">INF</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">floydWarshall</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      [
        0,
        2,
        3,
        6,
        4,
        6,
      ],
      [
        Infinity,
        0,
        1,
        4,
        2,
        4,
      ],
      [
        Infinity,
        Infinity,
        0,
        6,
        3,
        5,
      ],
      [
        Infinity,
        Infinity,
        Infinity,
        0,
        Infinity,
        2,
      ],
      [
        Infinity,
        Infinity,
        Infinity,
        3,
        0,
        2,
      ],
      [
        Infinity,
        Infinity,
        Infinity,
        Infinity,
        Infinity,
        0,
      ],
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6700\u5C0F\u751F\u6210\u6811-mst" tabindex="-1"><a class="header-anchor" href="#\u6700\u5C0F\u751F\u6210\u6811-mst" aria-hidden="true">#</a> \u6700\u5C0F\u751F\u6210\u6811\uFF08MST\uFF09</h3><p><span style="color:pink;">\u89E3\u51B3\u4EC0\u4E48\u95EE\u9898\uFF1F</span></p><ul><li><span style="color:pink;">\u4F60\u7684\u516C\u53F8\u6709\u51E0\u95F4\u529E\u516C\u5BA4\uFF0C\u8981\u4EE5\u6700\u4F4E\u7684\u6210\u672C\u5B9E\u73B0\u529E\u516C\u5BA4\u7535\u8BDD\u7EBF\u8DEF\u76F8\u4E92\u8FDE\u901A\uFF0C\u4EE5\u8282\u7701\u8D44\u91D1\uFF0C\u6700\u597D\u7684\u529E\u6CD5\u662F\u4EC0\u4E48</span></li><li><span style="color:pink;">\u8BBE\u60F3\u4F60\u8981\u5728n\u4E2A\u5C9B\u5C7F\u4E4B\u95F4\u5EFA\u9020\u6865\u6881\uFF0C\u60F3\u7528\u6700\u4F4E\u7684\u6210\u672C\u5B9E\u73B0\u6240\u6709\u5C9B\u5C7F\u76F8\u4E92\u8FDE\u901A</span></li></ul><h4 id="prim\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#prim\u7B97\u6CD5" aria-hidden="true">#</a> Prim\u7B97\u6CD5</h4><p>Prim\u7B97\u6CD5\u662F\u4E00\u79CD\u6C42\u89E3 <span style="color:pink;">\u52A0\u6743\u65E0\u5411\u8FDE\u901A\u56FE</span> \u7684MST\u95EE\u9898\u7684\u8D2A\u5FC3\u7B97\u6CD5\u3002\u5B83\u80FD\u627E\u51FA\u4E00\u4E2A\u8FB9\u7684\u5B50\u96C6\uFF0C<span style="color:pink;">\u4F7F\u5F97\u5176\u6784\u6210\u7684\u6811\u5305\u542B\u56FE\u4E2D\u6240\u6709\u9876\u70B9\uFF0C\u4E14\u8FB9\u7684\u6743\u503C\u4E4B\u548C\u6700\u5C0F\u3002</span> \u4ED6\u7684\u5177\u4F53\u5B9E\u73B0\u8DDF<code>dijkstra</code>\u7C7B\u4F3C\uFF0C\u6240\u4EE5\u6211\u672A\u63D0\u4F9B\u6D41\u7A0B\u56FE\u8FDB\u884C\u5206\u6790\u{1F602}</p><p>\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">INF</span> <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span>

<span class="token keyword">const</span> <span class="token function-variable function">minKey</span> <span class="token operator">=</span> <span class="token punctuation">(</span>graph<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> visited<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token constant">INF</span>
  <span class="token keyword">let</span> minIndex <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> graph<span class="token punctuation">.</span>length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&lt;</span> min<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      min <span class="token operator">=</span> key<span class="token punctuation">[</span>v<span class="token punctuation">]</span>
      minIndex <span class="token operator">=</span> v
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> minIndex
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">prim</span> <span class="token operator">=</span> <span class="token punctuation">(</span>graph<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> parent<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> visited<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> graph<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">INF</span>
    visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
  parent<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> u <span class="token operator">=</span> <span class="token function">minKey</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> key<span class="token punctuation">,</span> visited<span class="token punctuation">)</span>
    visited<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>graph<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> visited<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> graph<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&lt;</span> key<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        parent<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> u
        key<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> graph<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> parent
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vitest\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;Prim&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
  <span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token function">prim</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span>

  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> graph<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    str <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">   </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>

  <span class="token function">expect</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &quot;0 - 1   2
    1 - 2   2
    5 - 3   2
    1 - 4   2
    4 - 5   2
    &quot;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F85\u52A9\u56FE\u5982\u4E0B\uFF1A</p><p><img src="`+k+'" alt="prim\u8F85\u52A9\u56FE"></p><h4 id="kruskal\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#kruskal\u7B97\u6CD5" aria-hidden="true">#</a> Kruskal\u7B97\u6CD5</h4><p>Kruskal\u7B97\u6CD5\u4E5F\u662F\u4E00\u79CD <span style="color:pink;">\u6C42\u52A0\u6743\u65E0\u5411\u8FDE\u901A\u56FE\u7684MST\u7684\u8D2A\u5FC3\u7B97\u6CD5</span></p><p>\u7531\u4E8E\u4E66\u4E2D\u4EE3\u7801\u5B58\u5728\u95EE\u9898\uFF0C\u6240\u4EE5\u8BF7\u8BBF\u95EE\u5982\u4E0B\u94FE\u63A5</p>',35),v=s("\u7ED9\u4E00\u4E2A\u94FE\u63A5\uFF1A"),m={href:"https://segmentfault.com/a/1190000012649227",target:"_blank",rel:"noopener noreferrer"},b=s("Kruskal\u7B97\u6CD5js\u5B9E\u73B0");function g(y,h){const a=l("ExternalLinkIcon");return t(),e("div",null,[d,n("blockquote",null,[n("p",null,[v,n("a",m,[b,o(a)])])])])}const w=p(r,[["render",g],["__file","111001.html.vue"]]);export{w as default};
