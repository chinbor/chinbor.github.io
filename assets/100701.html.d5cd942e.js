import{_ as p,o as t,c as e,b as n,d as o,a as s,e as c,r as u}from"./app.9376a9a7.js";const l={},i=s(`<h2 id="\u901A\u8FC7\u4EE3\u7801\u770B\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u901A\u8FC7\u4EE3\u7801\u770B\u5B9A\u4E49" aria-hidden="true">#</a> \u901A\u8FC7\u4EE3\u7801\u770B\u5B9A\u4E49</h2><p>\u4E09\u4E2A\u8BA2\u5355\u51FD\u6570\uFF0C\u54B1\u4EEC\u7EA6\u5B9A\u8D70\u4E0B\u4E2A\u8282\u70B9\u8FD4\u56DE<code>nextSuccessor</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">order500</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">orderType<span class="token punctuation">,</span> pay<span class="token punctuation">,</span> stock</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> orderType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> pay <span class="token operator">===</span> <span class="token boolean">true</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> &#39;<span class="token number">500</span>\u5143\u5B9A\u91D1\u9884\u8D2D\uFF0C\u5F97\u5230<span class="token number">100</span>\u4F18\u60E0\u5238\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;nextSuccessor&#39;</span><span class="token punctuation">;</span>    <span class="token comment">// \u6211\u4E0D\u77E5\u9053\u4E0B\u4E00\u4E2A\u8282\u70B9\u662F\u8C01\uFF0C\u53CD\u6B63\u628A\u8BF7\u6C42\u5F80\u540E\u9762\u4F20\u9012</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">order200</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">orderType<span class="token punctuation">,</span> pay<span class="token punctuation">,</span> stock</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> orderType <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> pay <span class="token operator">===</span> <span class="token boolean">true</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> &#39;<span class="token number">200</span>\u5143\u5B9A\u91D1\u9884\u8D2D\uFF0C\u5F97\u5230<span class="token number">50</span>\u4F18\u60E0\u5238\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;nextSuccessor&#39;</span><span class="token punctuation">;</span>    <span class="token comment">// \u6211\u4E0D\u77E5\u9053\u4E0B\u4E00\u4E2A\u8282\u70B9\u662F\u8C01\uFF0C\u53CD\u6B63\u628A\u8BF7\u6C42\u5F80\u540E\u9762\u4F20\u9012</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">orderNormal</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">orderType<span class="token punctuation">,</span> pay<span class="token punctuation">,</span> stock</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> stock <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> \u2019\u666E\u901A\u8D2D\u4E70\uFF0C\u65E0\u4F18\u60E0\u5238\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> \u2019\u624B\u673A\u5E93\u5B58\u4E0D\u8DB3\u2019 <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u804C\u8D23\u94FE\u7C7B</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Chain.prototype.setNextSuccessor  \u6307\u5B9A\u5728\u94FE\u4E2D\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
<span class="token comment">// Chain.prototype.passRequest  \u4F20\u9012\u8BF7\u6C42\u7ED9\u67D0\u4E2A\u8282\u70B9</span>

<span class="token keyword">var</span> <span class="token function-variable function">Chain</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fn <span class="token operator">=</span> fn<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Chain</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setNextSuccessor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">successor</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">=</span> successor<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Chain</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">passRequest</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">===</span> <span class="token string">&#39;nextSuccessor&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor<span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u8282\u70B9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> chainOrder500 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span> order500 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> chainOrder200 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span> order200 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> chainOrderNormal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span> orderNormal <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6307\u5B9A\u987A\u5E8F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>chainOrder500<span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span> chainOrder200 <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span> chainOrderNormal <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BF7\u6C42\u5728\u94FE\u6761\u4E2D\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>chainOrder500<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A500\u5143\u5B9A\u91D1\u9884\u8D2D\uFF0C\u5F97\u5230100\u4F18\u60E0\u5238</span>
chainOrder500<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A200\u5143\u5B9A\u91D1\u9884\u8D2D\uFF0C\u5F97\u523050\u4F18\u60E0\u5238</span>
chainOrder500<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">(</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A\u666E\u901A\u8D2D\u4E70\uFF0C\u65E0\u4F18\u60E0\u5238</span>
chainOrder500<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u8F93\u51FA\uFF1A\u624B\u673A\u5E93\u5B58\u4E0D\u8DB3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><span style="color:red;">\u65B0\u589E\u8282\u70B9\uFF0C\u5E76\u8BBE\u7F6E\u8282\u70B9\u7684\u76F8\u5173\u987A\u5E8F</span></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">order300</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5177\u4F53\u5B9E\u73B0\u7565</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

chainOrder300<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span> order300 <span class="token punctuation">)</span><span class="token punctuation">;</span>

chainOrder500<span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span> chainOrder300<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span> chainOrder200<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span>chainOrderNormal<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F02\u6B65\u7684\u804C\u8D23\u94FE" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7684\u804C\u8D23\u94FE" aria-hidden="true">#</a> \u5F02\u6B65\u7684\u804C\u8D23\u94FE</h2><p>\u589E\u52A0next\u65B9\u6CD5\uFF0C\u624B\u52A8\u8C03\u7528\u4E0B\u4E2A\u8282\u70B9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">Chain</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fn <span class="token operator">=</span> fn<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Chain</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setNextSuccessor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">successor</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">=</span> successor<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Chain</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">passRequest</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">===</span> <span class="token string">&#39;nextSuccessor&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor<span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Chain</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">next</span><span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successor<span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> fn1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&#39;nextSuccessor&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> fn2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      self<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> fn3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chain</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fn1<span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span> fn2 <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextSuccessor</span><span class="token punctuation">(</span> fn3 <span class="token punctuation">)</span><span class="token punctuation">;</span>
fn1<span class="token punctuation">.</span><span class="token function">passRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F18\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4F18\u7F3A\u70B9" aria-hidden="true">#</a> \u4F18\u7F3A\u70B9</h2><p><strong>\u7F3A\u70B9\uFF1A</strong></p><ul><li><p>\u8FC7\u957F\u7684\u804C\u8D23\u94FE\u7531\u4E8E\u9700\u8981\u521B\u5EFA\u8282\u70B9\u5BF9\u8C61\uFF0C\u6B64\u65F6\uFF0C\u5BF9\u8C61\u8FC7\u591A\uFF0C\u8017\u8D39\u5185\u5B58\u3002</p></li><li><p>\u53D1\u8D77\u65B9\u7684\u8BF7\u6C42\u4E0D\u4E00\u5B9A\u88AB\u8282\u70B9\u5BF9\u8C61\u5904\u7406\uFF0C\u6B64\u65F6\u9700\u8981\u5728\u8282\u70B9\u672B\u5C3E\u624B\u52A8\u6DFB\u52A0\u4E00\u4E2A\u63A5\u53D7\u8005\u5904\u7406\u8FD9\u79CD\u5373\u5C06\u79BB\u5F00\u94FE\u5C3E\u7684\u8BF7\u6C42\u3002</p></li></ul><p><strong>\u4F18\u70B9\uFF1A</strong></p><ul><li><p>\u6BCF\u4E2A\u8282\u70B9\u90FD\u6709\u5404\u81EA\u7684\u5904\u7406\u903B\u8F91\u800C\u4E92\u4E0D\u5F71\u54CD\u3002</p></li><li><p>\u94FE\u4E2D\u7684\u8282\u70B9\u5BF9\u8C61\u53EF\u4EE5\u7075\u6D3B\u62C6\u5206\u91CD\u7EC4\u3002</p></li><li><p>\u53EF\u4EE5\u624B\u52A8\u6307\u5B9A\u8D77\u59CB\u8282\u70B9\u3002</p></li></ul><h2 id="\u4F7F\u7528aop-\u9762\u5411\u5207\u9762\u7F16\u7A0B-\u5B9E\u73B0\u804C\u8D23\u94FE" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528aop-\u9762\u5411\u5207\u9762\u7F16\u7A0B-\u5B9E\u73B0\u804C\u8D23\u94FE" aria-hidden="true">#</a> \u4F7F\u7528AOP\uFF08\u9762\u5411\u5207\u9762\u7F16\u7A0B\uFF09\u5B9E\u73B0\u804C\u8D23\u94FE</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">after</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">fn</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">===</span> <span class="token string">&#39;nextSuccessor&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> arguments <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> order <span class="token operator">=</span> order500yuan<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span> order200yuan <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span> orderNormal <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">order</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A500\u5143\u5B9A\u91D1\u9884\u8D2D\uFF0C\u5F97\u5230100\u4F18\u60E0\u5238</span>
<span class="token function">order</span><span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u8F93\u51FA\uFF1A200\u5143\u5B9A\u91D1\u9884\u8D2D\uFF0C\u5F97\u523050\u4F18\u60E0\u5238</span>
<span class="token function">order</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u8F93\u51FA\uFF1A\u666E\u901A\u8D2D\u4E70\uFF0C\u65E0\u4F18\u60E0\u5238</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u5B9E\u73B0\u7406\u89E3\u8D77\u6765\u8F83\u590D\u6742\uFF0C\u56E0\u4E3A\u51FD\u6570\u4E2D\u7684this\u6307\u5411\u4F1A\u5F88\u96BE\u770B\u660E\u767D\uFF0C\u5176\u6B21\u5C31\u662F\u4F7F\u7528\u9AD8\u9636\u51FD\u6570\u4EE5\u53CA\u95ED\u5305\uFF0C\u90A3\u4E48\u6574\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u53E0\u52A0\u5F88\u591A\u5C42\u3002\u5BF9\u6027\u80FD\u635F\u8017\u8F83\u5927\u3002</p><h2 id="\u4E0A\u9762\u51FA\u73B0\u4E00\u4E2A-aop-\u7684\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u9762\u51FA\u73B0\u4E00\u4E2A-aop-\u7684\u6982\u5FF5" aria-hidden="true">#</a> \u4E0A\u9762\u51FA\u73B0\u4E00\u4E2A aop \u7684\u6982\u5FF5</h2>`,27),k={href:"https://juejin.cn/post/6844903838172839943",target:"_blank",rel:"noopener noreferrer"},r=c("AOP\u77E5\u8BC6\u70B9"),d=s(`<p>\u7406\u8BBA\u6211\u6CA1\u7406\u89E3\uFF0C\u4F46\u662F\u5462\uFF0C\u51E0\u79CD\u5B9E\u73B0\u5012\u662F\u770B\u660E\u767D\u4E86</p><p>before\uFF08\u51FD\u6570\u6267\u884C\u524D\u6267\u884C\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">before</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">beforefun</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _orgin <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token comment">// \u4FDD\u5B58\u539F\u51FD\u6570\u5F15\u7528</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE\u5305\u542B\u4E86\u539F\u51FD\u6570\u548C\u65B0\u51FD\u6570\u7684&quot;\u4EE3\u7406\u51FD\u6570&quot;</span>
    <span class="token function">beforefun</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u65B0\u51FD\u6570\uFF0C\u4FEE\u6B63this</span>
    <span class="token keyword">return</span> <span class="token function">_orgin</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u539F\u51FD\u6570</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>after\uFF08\u51FD\u6570\u6267\u884C\u540E\u6267\u884C\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">after</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">afterfun</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _orgin <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token comment">// \u4FDD\u5B58\u539F\u51FD\u6570\u5F15\u7528</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE\u5305\u542B\u4E86\u539F\u51FD\u6570\u548C\u65B0\u51FD\u6570\u7684&quot;\u4EE3\u7406\u51FD\u6570&quot;</span>
    <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token function">_orgin</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u539F\u51FD\u6570</span>
    <span class="token function">afterfun</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u65B0\u51FD\u6570\uFF0C\u4FEE\u6B63this</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>around\uFF08\u51FD\u6570\u6267\u884C\u524D\u5206\u522B\u6267\u884C\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5229\u7528\u524D\u9762\u7684before\u3001after\u65B9\u6CD5\u5B9E\u73B0</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">around</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">beforeFun<span class="token punctuation">,</span> afterFun</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _orgin <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> _orgin<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>beforeFun<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>afterFun<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(m,b){const a=u("ExternalLinkIcon");return t(),e("div",null,[i,n("p",null,[n("a",k,[r,o(a)])]),d])}const y=p(l,[["render",v],["__file","100701.html.vue"]]);export{y as default};
