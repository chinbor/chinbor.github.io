import{_ as n,o as s,c as a,a as p}from"./app.9376a9a7.js";const t="/assets/2022-11-18-10-56-17.10e01400.png",e="/assets/2022-11-19-16-58-21.657ac2e3.png",o="/assets/2022-11-24-12-22-57.7c41bc51.png",c="/assets/2022-11-28-12-31-53.96beecf5.png",l="/assets/2022-11-29-19-30-15.e36f1eff.png",i="/assets/2022-11-29-19-39-26.8f902262.png",u="/assets/2022-11-29-19-59-53.a2cb3ae6.png",r="/assets/2022-11-29-20-14-00.cf89ebf5.png",k="/assets/2022-11-29-20-20-33.18ab70f9.png",d="/assets/2022-11-29-20-29-52.cc6dbe9c.png",v="/assets/2022-12-01-14-05-06.2de51a3d.png",m="/assets/2022-12-06-15-21-58.78cddd31.png",b="/assets/2022-12-06-15-24-08.89807dc6.png",y="/assets/2022-12-06-15-25-11.bff07b51.png",g="/assets/2022-12-06-15-29-58.316e27ee.png",f={},w=p(`<h2 id="\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5</h2><h3 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h3><blockquote><p>\u65F6\u95F4\u590D\u6742\u5EA6 O(n^2)</p></blockquote><p>\u8F85\u52A9\u51FD\u6570 <code>swap</code> \u4EA4\u6362\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4F4D\u7F6E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>array<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F85\u52A9\u51FD\u6570 <code>defaultCompare</code> \u6BD4\u8F83 a \u4E0E b \u7684\u5927\u5C0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> Compare <span class="token punctuation">{</span>
  <span class="token constant">LESS_THAN</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">BIGGER_THAN</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">EQUALS</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defaultCompare</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Compare<span class="token punctuation">.</span><span class="token constant">EQUALS</span>

  <span class="token keyword">return</span> a <span class="token operator">&lt;</span> b <span class="token operator">?</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span> <span class="token operator">:</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6392\u5E8F\u7B97\u6CD5\u5B9E\u73B0\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">bubbleSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56FE\u793A\u5206\u6790\u5982\u4E0B\uFF1A</p><p><img src="`+t+`" alt="\u5192\u6CE1\u6392\u5E8F"></p><p>\u53EF\u4EE5\u53D1\u73B0\u7EA2\u8272\u90E8\u5206\u5176\u5B9E\u662F\u672A\u5FC5\u8981\u7684\u6BD4\u8F83\uFF0C\u4E8E\u662F\u4E4E\u5BF9\u4EE3\u7801\u8FDB\u884C\u4F18\u5316\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">modifiedBubbleSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u4E0A <code>vitest</code> \u6D4B\u8BD5\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bubbleSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">modifiedBubbleSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      2,
      3,
      4,
      5,
      7,
      8,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h3><p>\u539F\u7406\uFF1A\u9009\u62E9\u6392\u5E8F\u5927\u81F4\u7684\u601D\u8DEF\u662F\u627E\u5230\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u6700\u5C0F\u503C\u5E76\u5C06\u5176\u653E\u7F6E\u5728\u7B2C\u4E00\u4F4D\uFF0C\u63A5\u7740\u627E\u5230\u7B2C\u4E8C\u5C0F\u7684\u503C\u5E76\u5C06\u5176\u653E\u5728\u7B2C\u4E8C\u4F4D</p><p>\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> swap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./heap&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Compare<span class="token punctuation">,</span> defaultCompare <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./sortedLinkedList&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">selectionSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array
  <span class="token keyword">let</span> indexMin

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    indexMin <span class="token operator">=</span> i

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>indexMin<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
        indexMin <span class="token operator">=</span> j
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!==</span> indexMin<span class="token punctuation">)</span>
      <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> indexMin<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vitest\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;selectionSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">selectionSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      2,
      3,
      4,
      5,
      7,
      8,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="selectionSort"></p><h3 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h3><p>\u539F\u7406\uFF1A\u4ECE\u7B2C\u4E8C\u4F4D\u5F00\u59CB\u63D0\u53D6\u4E3Atemp\u5E76\u5FAA\u73AF\u6BD4\u8F83\u4E0E\u524D\u8005\u7684\u5927\u5C0F\uFF0C\u82E5\u5C0F\u4E8E\u524D\u8005\uFF0C\u90A3\u4E48\u5C06\u524D\u8005\u8D4B\u4E88\u5F53\u524D\u4F4D\u7F6E\uFF0C\u7ED3\u675F\u540E\u5F97\u5230temp\u5E94\u8BE5\u88AB\u63D2\u5165\u7684\u4F4D\u7F6E</p><p>\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Compare<span class="token punctuation">,</span> defaultCompare <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./sortedLinkedList&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">insertionSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array
  <span class="token keyword">let</span> temp

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> i
    temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">compareFn</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
      j<span class="token operator">--</span>
    <span class="token punctuation">}</span>

    array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vitest\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;insertionSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">insertionSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      2,
      3,
      4,
      5,
      7,
      8,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+`" alt="insertionSort"></p><h3 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h3><p>\u539F\u7406\uFF1A\u539F\u59CB\u6570\u7EC4\u5207\u5206\u6210\u8F83\u5C0F\u7684\u6570\u7EC4\uFF0C\u76F4\u5230\u6BCF\u4E2A\u5C0F\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u63A5\u7740\u5C06\u5C0F\u6570\u7EC4\u5F52\u5E76\u6210\u8F83\u5927\u7684\u6570\u7EC4\uFF0C\u76F4\u5230\u6700\u540E\u53EA\u6709\u4E00\u4E2A\u6392\u5E8F\u5B8C\u6BD5\u7684\u5927\u6570\u7EC4</p><p>\u5F52\u5E76\u6392\u5E8F\u7684\u5B9E\u73B0\u5927\u81F4\u4E24\u4E2A\u8FC7\u7A0B\uFF08\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u8FDB\u884C\u62C6\u5206\uFF0C\u53E6\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u5408\u5E76\uFF09</p><p><code>merge</code>: \u5408\u5E76\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">merge</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>left<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn<span class="token operator">:</span> ICompareFunction<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u4F7F\u7528 i j \u8FDB\u884C\u6BD4\u8F83 left\u6570\u7EC4\u4E0Eright\u6570\u7EC4 \u4E2D\u7684\u5143\u7D20</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> right<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span> <span class="token operator">?</span> left<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">:</span> right<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5224\u65AD\u662Fleft\u5148\u904D\u5386\u5B8C\u6BD5\u8FD8\u662Fright\uFF0C</span>
  <span class="token comment">// 1. \u82E5\u4E3Aright\u5148\u904D\u5386\u5B8C\u6BD5\u4E5F\u5C31\u662F\u6B64\u65F6 i &lt; left.length \u90A3\u4E48\u8BF4\u660Eleft\u4F59\u4E0B\u90E8\u5206\u90FD\u662F\u5927\u4E8Eright\u4E2D\u5143\u7D20</span>
  <span class="token comment">// 2. \u82E5\u4E3Aleft\u5148\u904D\u5386\u5B8C\u6BD5\u4E5F\u5C31\u662F\u6B64\u65F6 i &gt;= left.length \u90A3\u4E48\u8BF4\u660Eright\u4F59\u4E0B\u90E8\u5206\u90FD\u662F\u5927\u4E8Eleft\u4E2D\u5143\u7D20</span>
  <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">?</span> left<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">:</span> right<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mergeSort</code>: \u62C6\u5206\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">mergeSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7ED3\u675F\u6761\u4EF6\u5C31\u662Farray.length === 1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array

    <span class="token comment">// \u6570\u7EC4\u4E2D\u95F4\u90E8\u5206</span>
    <span class="token keyword">const</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token comment">// 0 ~ middle</span>
    <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>

    <span class="token comment">// middle ~ array.length</span>
    <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>middle<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>

    <span class="token comment">// \u5DE6\u53F3\u8FDB\u884C\u5408\u5E76</span>
    array <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vitest\u6D4B\u8BD5\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;mergeSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="mergeSort"></p><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h3><p>\u539F\u7406\uFF1A</p><ul><li>\u9996\u5148\uFF0C\u4ECE\u6570\u7EC4\u4E2D\u9009\u62E9\u4E00\u4E2A\u503C\u4F5C\u4E3A\u4E3B\u5143\uFF08pivot\uFF09\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u4E2D\u95F4\u7684\u90A3\u4E2A\u503C</li><li>\u521B\u5EFA\u4E24\u4E2A\u6307\u9488\uFF08\u5F15\u7528\uFF09\uFF0C\u5DE6\u8FB9\u4E00\u4E2A\u6307\u5411\u6570\u7EC4\u7B2C\u4E00\u4E2A\u503C\uFF0C\u53F3\u8FB9\u4E00\u4E2A\u6307\u5411\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C\u3002\u79FB\u52A8\u5DE6\u6307\u9488\u76F4\u5230\u6211\u4EEC\u627E\u5230\u4E00\u4E2A\u6BD4\u4E3B\u5143\u5927\u7684\u503C\uFF0C\u63A5\u7740\uFF0C\u79FB\u52A8\u53F3\u6307\u9488\u76F4\u5230\u627E\u5230\u4E00\u4E2A\u6BD4\u4E3B\u5143\u5C0F\u7684\u503C\uFF0C\u7136\u540E\u4EA4\u6362\u5B83\u4EEC\uFF0C\u91CD\u590D\u8FD9\u4E2A\u8FC7\u7A0B\uFF0C\u76F4\u5230\u5DE6\u6307\u9488\u8D85\u8FC7\u4E86\u53F3\u6307\u9488\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u5C06\u4F7F\u5F97\u6BD4\u4E3B\u5143\u5C0F\u7684\u503C\u90FD\u6392\u5728\u4E3B\u5143\u4E4B\u524D\uFF0C\u800C\u6BD4\u4E3B\u5143\u5927\u7684\u503C\u90FD\u6392\u5728\u4E3B\u5143\u4E4B\u540E\u3002\u8FD9\u4E00\u6B65\u53EB\u4F5C\u5212\u5206\uFF08partition\uFF09\u64CD\u4F5C</li><li>\u63A5\u7740\uFF0C\u7B97\u6CD5\u5BF9\u5212\u5206\u540E\u7684\u5C0F\u6570\u7EC4\uFF08\u8F83\u4E3B\u5143\u5C0F\u7684\u503C\u7EC4\u6210\u7684\u5B50\u6570\u7EC4\uFF0C\u4EE5\u53CA\u8F83\u4E3B\u5143\u5927\u7684\u503C\u7EC4\u6210\u7684\u5B50\u6570\u7EC4\uFF09\u91CD\u590D\u4E4B\u524D\u7684\u4E24\u4E2A\u6B65\u9AA4\uFF0C\u76F4\u81F3\u6570\u7EC4\u5DF2\u5B8C\u5168\u6392\u5E8F</li></ul><p><span style="color:pink;">\u4F60\u53EA\u8981\u77E5\u9053\u5FEB\u901F\u6392\u5E8F\u901A\u5E38\u6BD4\u6240\u6709\u7684 O(nlog(n)) \u65F6\u95F4\u590D\u6742\u5EA6\u6392\u5E8F\u7B97\u6CD5\u4E2D\u6027\u80FD\u66F4\u597D\uFF01</span></p><p><code>partition</code>: \u5212\u5206\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> compareFn<span class="token operator">:</span> ICompareFunction<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> pivot <span class="token operator">=</span> array<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">+</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> left
  <span class="token keyword">let</span> j <span class="token operator">=</span> right

  <span class="token comment">// \u5F53\u5DE6\u6307\u9488\u6307\u5411\u7684\u5143\u7D20\u6BD4\u4E3B\u5143\u5927\u4E14\u53F3\u6307\u9488\u6307\u5411\u7684\u5143\u7D20\u6BD4\u4E3B\u5143\u5C0F\uFF0C\u5E76\u4E14\u6B64\u65F6\u5DE6\u6307\u9488\u7D22\u5F15\u6CA1\u6709\u53F3\u6307\u9488\u7D22\u5F15\u5927\u65F6\uFF0C\u4EA4\u6362\u5B83\u4EEC\uFF0C\u5E76\u4E14\u6B64\u65F6\u5DE6\u6307\u9488\u7D22\u5F15\u6CA1\u6709\u53F3\u6307\u9488\u7D22\u5F15\u5927</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> pivot<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span>
      i<span class="token operator">++</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> pivot<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
      j<span class="token operator">--</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>
      i<span class="token operator">++</span>
      j<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> i
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>quickSort</code>: \u6392\u5E8F\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> compareFn<span class="token operator">:</span> ICompareFunction<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index

  <span class="token comment">// \u4E2D\u6B62\u6761\u4EF6 &lt;= 1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// partition\u8FD4\u56DE \u5DE6\u6307\u9488\u7684\u7D22\u5F15</span>
    index <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token comment">// \u5DE6\u4FA7\u518D\u8FDB\u884C\u5212\u5206</span>
      <span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> right<span class="token punctuation">)</span>
      <span class="token comment">// \u53F3\u4FA7\u518D\u8FDB\u884C\u5212\u5206</span>
      <span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> index<span class="token punctuation">,</span> right<span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">quickSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528vitest\u6D4B\u8BD5\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;quickSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790\u56FE\u5982\u4E0B</p><ul><li>\u7B2C\u4E00\u6B21\u5212\u5206\u5F97\u5230<code>index=5</code>\uFF0C\u4E0B\u6B21\u5C31\u662F 0\u52304\u5F00\u59CB\u5212\u5206</li></ul><p><img src="`+l+'" alt="\u7B2C\u4E00\u6B21\u5212\u5206"></p><ul><li>\u7B2C\u4E8C\u6B21\u5212\u5206\u5F97\u5230<code>index=1</code>\uFF0C\u4E0B\u6B21\u5C31\u662F 1\u52304\u5F00\u59CB\u5212\u5206</li></ul><p><img src="'+i+'" alt="\u7B2C\u4E8C\u6B21\u5212\u5206"></p><ul><li>\u7B2C\u4E09\u6B21\u5212\u5206\u5F97\u5230<code>index=3</code>\uFF0C\u4E0B\u6B21\u5C31\u662F 1\u52302\u5F00\u59CB\u5212\u5206</li></ul><p><img src="'+u+'" alt="\u7B2C\u4E09\u6B21\u5212\u5206"></p><ul><li>\u7B2C\u56DB\u6B21\u5212\u5206\u5F97\u5230<code>index=2</code>\uFF0C\u6B64\u65F6\u5DE6\u4FA7quick\u5B8C\u6BD5\u4E86\uFF0C\u8BE5\u53F3\u4FA7quick\u4E86\uFF0C\u4E0B\u6B21\u4ECE 3\u52304\u5F00\u59CB</li></ul><p><img src="'+r+'" alt="\u7B2C\u56DB\u6B21\u5212\u5206"></p><ul><li>\u7B2C\u4E94\u6B21\u5212\u5206\u5F97\u5230<code>index=4</code>\uFF0C \u4F9D\u7136\u662F\u53F3\u4FA7\u7684quick\uFF0C\u4E0B\u6B21\u4ECE 5\u52306\u5F00\u59CB</li></ul><p><img src="'+k+'" alt="\u7B2C\u4E94\u6B21\u5212\u5206"></p><ul><li>\u7B2C\u516D\u6B21\u5212\u5206\u5F97\u5230<code>index=6</code>\uFF0C\u6B64\u65F6\u7531\u4E8Eleft=5\u4E14right=6\uFF0C\u4E0D\u6EE1\u8DB3\u6761\u4EF6\u4E8E\u662F\u76F4\u63A5return</li></ul><p><img src="'+d+`" alt="\u7B2C\u516D\u6B21\u5212\u5206"></p><p><span style="color:pink;">\u8FD9\u91CC\u7ED9\u4E00\u4E2A <code>chatGpt</code> \u5B9E\u73B0\u7684\u7248\u672C\uFF0C\u786E\u5B9E\u6BD4\u524D\u4E00\u4E2A\u7684\u5B9E\u73B0\u8981\u597D\u592A\u591A\u4E86\uFF01\uFF01\uFF01</span></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">quickSortByChatGpt</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> arr

  <span class="token keyword">const</span> pivotIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> pivot <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>pivotIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

  <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> pivot<span class="token punctuation">)</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">else</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>pivot<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BA1\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u8BA1\u6570\u6392\u5E8F</h3><p>\u662F\u4E00\u4E2A\u5206\u5E03\u5F0F\u6392\u5E8F\uFF0C\u5206\u5E03\u5F0F\u6392\u5E8F\u4F7F\u7528\u5DF2\u7EC4\u7EC7\u597D\u7684\u8F85\u52A9\u6570\u636E\u7ED3\u6784\uFF08\u79F0\u4E3A\u6876\uFF09\uFF0C\u7136\u540E\u8FDB\u884C\u5408\u5E76\uFF0C\u5F97\u5230\u6392\u597D\u5E8F\u7684\u6570\u7EC4\u3002\u8BA1\u6570\u6392\u5E8F\u4F7F\u7528\u4E00\u4E2A\u7528\u6765\u5B58\u50A8\u6BCF\u4E2A\u5143\u7D20\u5728\u539F\u59CB\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u7684\u4E34\u65F6\u6570\u7EC4\u3002\u5728\u6240\u6709\u5143\u7D20\u90FD\u8BA1\u6570\u5B8C\u6210\u540E\uFF0C\u4E34\u65F6\u6570\u7EC4\u5DF2\u6392\u597D\u5E8F\u5E76\u53EF\u8FED\u4EE3\u4EE5\u6784\u5EFA\u6392\u5E8F\u540E\u7684\u7ED3\u679C\u6570\u7EC4\uFF0C<span style="color:pink;">\u5B83\u662F\u7528\u6765\u6392\u5E8F\u6574\u6570\u7684\u4F18\u79C0\u7B97\u6CD5</span> \u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n+k)\uFF0Ck\u662F\u4E34\u65F6\u8BA1\u6570\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u9700\u8981\u66F4\u591A\u7684\u5185\u5B58\u5B58\u653E\u4E34\u65F6\u6570\u7EC4\uFF08\u7A7A\u95F4\u6362\u65F6\u95F4\uFF09</p><p>\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Compare<span class="token punctuation">,</span> defaultCompare <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./sortedLinkedList&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">findMaxValue</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span>
        max <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> max
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">countingSort</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> array

  <span class="token keyword">const</span> maxValue <span class="token operator">=</span> <span class="token function">findMaxValue</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
  <span class="token keyword">let</span> sortedIndex <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// WHY: \u6211\u4EEC\u5C06array\u6570\u7EC4\u5143\u7D20\u503C\uFF08\u6574\u6570\uFF09\u4F5C\u4E3A\u65B0\u6570\u7EC4\u7684\u7D22\u5F15\uFF0C</span>
  <span class="token comment">// \u521D\u59CB\u5316\u957F\u5EA6\uFF1A\u6700\u5927\u503C + 1\uFF0C\u662F\u56E0\u4E3A\u6570\u7EC4\u662F\u4ECE0\u5F00\u59CB\u7D22\u5F15\u7684</span>
  <span class="token keyword">const</span> counts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>maxValue<span class="token operator">!</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    counts<span class="token punctuation">[</span>ele<span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  counts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>ele <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      array<span class="token punctuation">[</span>sortedIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> i
      ele<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vitest\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;countingSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">countingSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      1,
      1,
      2,
      2,
      3,
      4,
      5,
      6,
      7,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790\u56FE\u5982\u4E0B\uFF1A</p><p><img src="`+v+`" alt="countingSort"></p><h3 id="\u6876\u6392\u5E8F-\u7BB1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6876\u6392\u5E8F-\u7BB1\u6392\u5E8F" aria-hidden="true">#</a> \u6876\u6392\u5E8F\uFF08\u7BB1\u6392\u5E8F\uFF09</h3><p>\u4E5F\u662F\u4E00\u4E2A <span style="color:pink;">\u5206\u5E03\u5F0F\u6392\u5E8F\u7B97\u6CD5</span>\uFF0C\u5B83\u5C06\u5143\u7D20 <span style="color:pink;">\u5206\u4E3A\u4E0D\u540C\u7684\u6876\uFF08\u8F83\u5C0F\u7684\u6570\u7EC4\uFF09</span> \uFF0C\u518D\u4F7F\u7528\u4E00\u4E2A\u7B80\u5355\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u4F8B\u5982 <span style="color:pink;">\u63D2\u5165\u6392\u5E8F\uFF08\u7528\u6765\u6392\u5E8F\u5C0F\u6570\u7EC4\u7684\u4E0D\u9519\u7684\u7B97\u6CD5\uFF09\uFF0C\u6765\u5BF9\u6BCF\u4E2A\u6876\u8FDB\u884C\u6392\u5E8F</span> \u3002\u7136\u540E\uFF0C\u5B83\u5C06\u6240\u6709\u7684\u6876\u5408\u5E76\u4E3A\u7ED3\u679C\u6570\u7EC4</p><ul><li>\u6574\u4E2A\u6570\u7EC4\u5143\u7D20\u5206\u4E3A\u591A\u4E2A\u8F83\u5C0F\u7684\u6570\u7EC4\uFF08\u6876\uFF09</li><li>\u4F7F\u7528\u63D2\u5165\u6392\u5E8F\u5BF9\u6BCF\u4E2A\u5C0F\u6570\u7EC4\uFF08\u6876\uFF09\u8FDB\u884C\u6392\u5E8F</li><li>\u6240\u6709\u6876\u5408\u5E76\u4E3A\u6700\u7EC8\u6392\u5E8F\u540E\u7684\u7ED3\u679C\u6570\u7EC4</li></ul><p>\u4EE3\u7801\u5B9E\u73B0:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> insertionSort <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./insertion-sort&#39;</span>

<span class="token keyword">function</span> <span class="token function">createBuckets</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bucketSize<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> minValue <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> maxValue <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

  <span class="token comment">// \u627E\u51FA\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u6700\u5C0F\u503C</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span>
      minValue <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span>
      maxValue <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4E00\u4E2Abucket\u7684\u5927\u5C0F\u4E3A5\uFF0C\u8BA1\u7B97\u9700\u8981\u51E0\u4E2Abucket\u5B58\u653E\u6240\u6709\u5143\u7D20</span>
  <span class="token keyword">const</span> bucketCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> bucketSize<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> buckets<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// \u6839\u636Ebucket\u7684\u6570\u91CF\u521D\u59CB\u5316buckets\u4E8C\u7EF4\u6570\u7EC4</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucketCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u5143\u7D20 array[i]\u5E94\u8BE5\u653E\u5728buckets\u7684\u54EA\u4E2A\u7D22\u5F15\u6570\u7EC4\u4E2D</span>
  <span class="token comment">// \u5F88\u7B80\u5355\uFF0C(\u6700\u5927\u503C - \u6700\u5C0F\u503C) / bucketSize \u5219\u4E3A\u6700\u5927\u7684\u7D22\u5F15\uFF0C\u5176\u4F59\u503C\u90FD\u662F\u5C0F\u4E8E\u6700\u5927\u503C\uFF0C\u6240\u4EE5\u7D22\u5F15\u53EA\u4F1A\u662F \`\u5C0F\u4E8E\u7B49\u4E8E\`</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    buckets<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> bucketSize<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> buckets
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">sortBuckets</span><span class="token punctuation">(</span>buckets<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> sortedArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> buckets<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8DDF\u5947\u602A\uFF0C\u4E0D\u5E94\u8BE5\u5B58\u5728 null || undefined \u7684\u60C5\u51B5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">insertionSort</span><span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

      sortedArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> sortedArray
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">bucketSort</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bucketSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> array

  <span class="token keyword">const</span> buckets <span class="token operator">=</span> <span class="token function">createBuckets</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> bucketSize<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token function">sortBuckets</span><span class="token punctuation">(</span>buckets<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528vitest\u6D4B\u8BD5\u5982\u4E0B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bucketCount&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">bucketSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      1,
      1,
      2,
      2,
      3,
      4,
      5,
      6,
      7,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u5176\u5B9E\u76F8\u5BF9\u8F83\u4E3A\u5BB9\u6613\u770B\u660E\u767D\uFF08\u6211\u5C31\u4E0D\u505A\u56FE\u4F8B\u4E86\uFF09\uFF0C\u5C06\u5927\u6570\u7EC4\u5206\u4E3A\u5F88\u591A\u4E2A\u6876\uFF08\u5C0F\u6570\u7EC4\uFF09<code>0\u53F7\u6876\u4E2D\u5143\u7D20 &lt; 1\u53F7\u6876\u4E2D\u5143\u7D20 &lt; ... &lt; n\u53F7\u6876\u4E2D\u5143\u7D20</code>\uFF0C\u5C06\u6BCF\u4E2A\u6876\u4F7F\u7528\u63D2\u5165\u6392\u5E8F\u7684\u65B9\u5F0F\u6392\u5E8F\uFF0C\u4E4B\u540E\u518D\u5C06\u5176\u89E3\u6784\u5230sortedArray\u4E2D\uFF0C\u8FD4\u56DE\u5373\u53EF\uFF0C\u5178\u578B\u7684\u7A7A\u95F4\u6362\u65F6\u95F4\u6392\u5E8F\u7B97\u6CD5</p><h3 id="\u57FA\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u57FA\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u57FA\u6570\u6392\u5E8F</h3><p>\u57FA\u6570\u6392\u5E8F\u4E5F\u662F\u4E00\u4E2A\u5206\u5E03\u5F0F\u6392\u5E8F\u7B97\u6CD5\uFF0C\u6839\u636E\u6570\u5B57\u7684\u6709\u6548\u4F4D\u6216\u57FA\u6570\u5C06\u6574\u6570\u5206\u5E03\u5230\u6876\u4E2D\uFF0C\u57FA\u6570\u662F\u57FA\u4E8E\u6570\u7EC4\u4E2D\u503C\u7684\u8BB0\u6570\u5236\u7684\u3002\u8FD9\u53E5\u8BDD\u8BF4\u7684\u8FF7\u8FF7\u7CCA\u7CCA\u7684\uFF0C\u5176\u5B9E\u5C31\u662F\u6839\u636E\u5F85\u6392\u5E8F\u6570\u7EC4\u4E2D\u6240\u6709\u5143\u7D20\u7684\u4E2A\u4F4D\u3001\u5341\u4F4D\u3001\u767E\u4F4D...\u8FDB\u884C\u6392\u5E8F\uFF0C\u4E2A\u4F4D\u6392\u5E8F\u540E\u518D\u5341\u4F4D\u6392\u5E8F\u518D\u767E\u4F4D\u6392\u5E8F....</p><p>\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> findMaxValue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./counting-sort&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Compare<span class="token punctuation">,</span> defaultCompare <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./sortedLinkedList&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">findMinValue</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> min <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span>
        min <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> min
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">countingSortForRadix</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> radixBase<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> significantDigit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> minValue<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> bucketsIndex
  <span class="token keyword">const</span> buckets<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> aux<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> radixBase<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token comment">// \u6570\u7EC4\u6B63\u5E8F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    bucketsIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> significantDigit<span class="token punctuation">)</span> <span class="token operator">%</span> radixBase<span class="token punctuation">)</span>
    buckets<span class="token punctuation">[</span>bucketsIndex<span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5BF9 buckets \u4E2D\u7684\u5143\u7D20\u9664\u7B2C\u4E00\u4E2A\u5916\u90FD\u7D2F\u52A0\u524D\u8005</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> radixBase<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> buckets<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

  <span class="token comment">// \u6570\u7EC4\u5012\u5E8F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    bucketsIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> significantDigit<span class="token punctuation">)</span> <span class="token operator">%</span> radixBase<span class="token punctuation">)</span>
    aux<span class="token punctuation">[</span><span class="token operator">--</span>buckets<span class="token punctuation">[</span>bucketsIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// array = []</span>
  <span class="token comment">// array.push(...aux)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> aux<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">radixSort</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> radixBase <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> array

  <span class="token keyword">const</span> minValue <span class="token operator">=</span> <span class="token function">findMinValue</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token operator">!</span>
  <span class="token keyword">const</span> maxValue <span class="token operator">=</span> <span class="token function">findMaxValue</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token operator">!</span>

  <span class="token keyword">let</span> significantDigit <span class="token operator">=</span> <span class="token number">1</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxValue <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> significantDigit <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array <span class="token operator">=</span> <span class="token function">countingSortForRadix</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> radixBase<span class="token punctuation">,</span> significantDigit<span class="token punctuation">,</span> minValue<span class="token punctuation">)</span>

    significantDigit <span class="token operator">*=</span> radixBase
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vitest\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;radixSort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">322</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">13423</span><span class="token punctuation">,</span> <span class="token number">6123</span><span class="token punctuation">,</span> <span class="token number">421</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">734</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">radixSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    [
      2,
      12,
      21,
      223,
      322,
      421,
      512,
      734,
      6123,
      13423,
    ]
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790\u56FE\u5982\u4E0B\uFF08\u4EC5\u4EC5\u5206\u6790\u4E2A\u4F4D\u7684\u6392\u5E8F\uFF0C\u540E\u7EED\u5341\u5206\u4F4D\u3001\u767E\u5206\u4F4D...\u7C7B\u63A8\uFF09</p><ul><li>\u5FAA\u73AF\u4F53\u6267\u884C\u6B21\u6570</li></ul><p><img src="`+m+'" alt="\u5206\u67901"></p><ul><li>\u5229\u7528buckets\u7EDF\u8BA1\u5BF9\u5E94\u5206\u4F4D\u503C\u51FA\u73B0\u4E2A\u6570\uFF08\u54B1\u4EEC\u8FD9\u91CC\u7EDF\u8BA1\u7684\u662F\u4E2A\u4F4D\u503C\uFF09</li></ul><p><img src="'+b+'" alt="\u5206\u67902"></p><ul><li>buckets\u6570\u7EC4\u5143\u7D20\u9664\u53BB\u7B2C\u4E00\u4E2A\uFF0C\u540E\u7EED\u5143\u7D20\u90FD\u7D2F\u52A0\u524D\u8005</li></ul><p><img src="'+y+'" alt="\u5206\u67903"></p><ul><li>\u4F7F\u7528 aux \u6570\u7EC4\u4F9D\u636Ebuckets\u6570\u7EC4\u5BF9\u5E94\u5206\u4F4D\u503C\u7684\u7EDF\u8BA1\u6B21\u6570\u5B58\u653E\u5BF9\u5E94\u539Farray\u6570\u7EC4\u4E2D\u7684\u6570\u636E</li></ul><p><img src="'+g+'" alt="\u5206\u67904"></p><p><span style="color:pink;">\u7EB5\u89C2\u6574\u4E2A\u7B97\u6CD5\uFF0C\u5176\u4E2D\u6700\u4E0D\u597D\u7406\u89E3\u7684\u5C31\u662F \u4E3A\u4EC0\u4E48 <code>buckets[i] += buckets[i - 1]</code>\uFF0C\u4E5F\u5C31\u662F\u5F53\u524D\u503C\u9700\u8981\u7D2F\u52A0\u524D\u8005\u503C\uFF1F\u5728\u54B1\u4EEC\u7684buckets\u4E2D\uFF0C\u5176\u7D22\u5F15\u5373\u4E3A\u6392\u5E8F\u5143\u7D20\u503C\u51CF\u53BB\u6700\u5C0F\u503C\u9664\u4EE5\u6709\u6548\u4F4D\u5E76\u5BF910\u53D6\u6A21\u5F97\u5230\u7684\u5BF9\u5E94\u4F4D\u7684\u503C\uFF01\uFF01\uFF08\u4E2A\u4F4D\u503C\u3001\u767E\u5206\u4F4D\u503C\u3001\u5343\u5206\u4F4D\u503C...\uFF09\u4E4B\u540E\u7D2F\u52A0\u524D\u8005\u662F\u56E0\u4E3A\u54B1\u4EEC\u9700\u8981\u7EC4\u88C5 aux\u6570\u7EC4\uFF0C\u53EF\u4EE5\u770B\u5230 buckets\u6570\u7EC4\u4E2D\u6240\u6709\u5143\u7D20\u503C\u4E4B\u548C\u4E3Aarray\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u7531\u4E8Eaux\u6570\u7EC4\u5176\u5B9E\u5C31\u662F\u6392\u5E8F\u540E\u7684array\u6570\u7EC4\uFF0C\u6240\u4EE5\u54B1\u4EEC\u9700\u8981\u5728buckets\u6570\u7EC4\u4E2D\u7D2F\u52A0\u524D\u8005\u5143\u7D20\u503C\u8FDB\u800C\u5F97\u5230\u6B63\u786E\u7684aux\u7D22\u5F15\uFF01\uFF01\uFF01</span></p>',96),h=[w];function x(S,_){return s(),a("div",null,h)}const C=n(f,[["render",x],["__file","111801.html.vue"]]);export{C as default};
